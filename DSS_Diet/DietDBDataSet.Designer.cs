//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DSS_Diet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DietDBDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DietDBDataSet : global::System.Data.DataSet {
        
        private КАТЕГОРИЯ_ПРОДУКТОВDataTable tableКАТЕГОРИЯ_ПРОДУКТОВ;
        
        private ЭЛЕМЕНТ_РАЦИОНАDataTable tableЭЛЕМЕНТ_РАЦИОНА;
        
        private СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ;
        
        private СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ;
        
        private РАЦИОНDataTable tableРАЦИОН;
        
        private ПРОДУКТDataTable tableПРОДУКТ;
        
        private ПАЦИЕНТDataTable tableПАЦИЕНТ;
        
        private DietReportDataTable tableDietReport;
        
        private НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА;
        
        private global::System.Data.DataRelation relationПРОДУКТ_Является_частью_ЭЛЕМЕНТ_РАЦИОНА;
        
        private global::System.Data.DataRelation relationРАЦИОН_Состоит_из_ЭЛЕМЕНТ_РАЦИОНА;
        
        private global::System.Data.DataRelation relationКАТЕГОРИЯ_ПРОДУКТОВ_Обладает_СОВМЕСТИМОСТЬ_КАТЕГОРИЙ;
        
        private global::System.Data.DataRelation relationПАЦИЕНТ_Назначается_РАЦИОН;
        
        private global::System.Data.DataRelation relationКАТЕГОРИЯ_ПРОДУКТОВ_Включает_в_себя_ПРОДУКТ;
        
        private global::System.Data.DataRelation relationНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Связан_с_СУТОЧНАЯ_НОРМА_ВЕЩЕСТВА;
        
        private global::System.Data.DataRelation relationНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Является_частью_РАЦИОН;
        
        private global::System.Data.DataRelation relationНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Описывает_ПАЦИЕНТ;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DietDBDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected DietDBDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["КАТЕГОРИЯ_ПРОДУКТОВ"] != null)) {
                    base.Tables.Add(new КАТЕГОРИЯ_ПРОДУКТОВDataTable(ds.Tables["КАТЕГОРИЯ_ПРОДУКТОВ"]));
                }
                if ((ds.Tables["ЭЛЕМЕНТ_РАЦИОНА"] != null)) {
                    base.Tables.Add(new ЭЛЕМЕНТ_РАЦИОНАDataTable(ds.Tables["ЭЛЕМЕНТ_РАЦИОНА"]));
                }
                if ((ds.Tables["СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ"] != null)) {
                    base.Tables.Add(new СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable(ds.Tables["СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ"]));
                }
                if ((ds.Tables["СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ"] != null)) {
                    base.Tables.Add(new СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable(ds.Tables["СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ"]));
                }
                if ((ds.Tables["РАЦИОН"] != null)) {
                    base.Tables.Add(new РАЦИОНDataTable(ds.Tables["РАЦИОН"]));
                }
                if ((ds.Tables["ПРОДУКТ"] != null)) {
                    base.Tables.Add(new ПРОДУКТDataTable(ds.Tables["ПРОДУКТ"]));
                }
                if ((ds.Tables["ПАЦИЕНТ"] != null)) {
                    base.Tables.Add(new ПАЦИЕНТDataTable(ds.Tables["ПАЦИЕНТ"]));
                }
                if ((ds.Tables["DietReport"] != null)) {
                    base.Tables.Add(new DietReportDataTable(ds.Tables["DietReport"]));
                }
                if ((ds.Tables["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА"] != null)) {
                    base.Tables.Add(new НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable(ds.Tables["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public КАТЕГОРИЯ_ПРОДУКТОВDataTable КАТЕГОРИЯ_ПРОДУКТОВ {
            get {
                return this.tableКАТЕГОРИЯ_ПРОДУКТОВ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ЭЛЕМЕНТ_РАЦИОНАDataTable ЭЛЕМЕНТ_РАЦИОНА {
            get {
                return this.tableЭЛЕМЕНТ_РАЦИОНА;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ {
            get {
                return this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ {
            get {
                return this.tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public РАЦИОНDataTable РАЦИОН {
            get {
                return this.tableРАЦИОН;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ПРОДУКТDataTable ПРОДУКТ {
            get {
                return this.tableПРОДУКТ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ПАЦИЕНТDataTable ПАЦИЕНТ {
            get {
                return this.tableПАЦИЕНТ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DietReportDataTable DietReport {
            get {
                return this.tableDietReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА {
            get {
                return this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DietDBDataSet cln = ((DietDBDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["КАТЕГОРИЯ_ПРОДУКТОВ"] != null)) {
                    base.Tables.Add(new КАТЕГОРИЯ_ПРОДУКТОВDataTable(ds.Tables["КАТЕГОРИЯ_ПРОДУКТОВ"]));
                }
                if ((ds.Tables["ЭЛЕМЕНТ_РАЦИОНА"] != null)) {
                    base.Tables.Add(new ЭЛЕМЕНТ_РАЦИОНАDataTable(ds.Tables["ЭЛЕМЕНТ_РАЦИОНА"]));
                }
                if ((ds.Tables["СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ"] != null)) {
                    base.Tables.Add(new СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable(ds.Tables["СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ"]));
                }
                if ((ds.Tables["СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ"] != null)) {
                    base.Tables.Add(new СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable(ds.Tables["СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ"]));
                }
                if ((ds.Tables["РАЦИОН"] != null)) {
                    base.Tables.Add(new РАЦИОНDataTable(ds.Tables["РАЦИОН"]));
                }
                if ((ds.Tables["ПРОДУКТ"] != null)) {
                    base.Tables.Add(new ПРОДУКТDataTable(ds.Tables["ПРОДУКТ"]));
                }
                if ((ds.Tables["ПАЦИЕНТ"] != null)) {
                    base.Tables.Add(new ПАЦИЕНТDataTable(ds.Tables["ПАЦИЕНТ"]));
                }
                if ((ds.Tables["DietReport"] != null)) {
                    base.Tables.Add(new DietReportDataTable(ds.Tables["DietReport"]));
                }
                if ((ds.Tables["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА"] != null)) {
                    base.Tables.Add(new НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable(ds.Tables["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableКАТЕГОРИЯ_ПРОДУКТОВ = ((КАТЕГОРИЯ_ПРОДУКТОВDataTable)(base.Tables["КАТЕГОРИЯ_ПРОДУКТОВ"]));
            if ((initTable == true)) {
                if ((this.tableКАТЕГОРИЯ_ПРОДУКТОВ != null)) {
                    this.tableКАТЕГОРИЯ_ПРОДУКТОВ.InitVars();
                }
            }
            this.tableЭЛЕМЕНТ_РАЦИОНА = ((ЭЛЕМЕНТ_РАЦИОНАDataTable)(base.Tables["ЭЛЕМЕНТ_РАЦИОНА"]));
            if ((initTable == true)) {
                if ((this.tableЭЛЕМЕНТ_РАЦИОНА != null)) {
                    this.tableЭЛЕМЕНТ_РАЦИОНА.InitVars();
                }
            }
            this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ = ((СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable)(base.Tables["СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ"]));
            if ((initTable == true)) {
                if ((this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ != null)) {
                    this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.InitVars();
                }
            }
            this.tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ = ((СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable)(base.Tables["СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ"]));
            if ((initTable == true)) {
                if ((this.tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ != null)) {
                    this.tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ.InitVars();
                }
            }
            this.tableРАЦИОН = ((РАЦИОНDataTable)(base.Tables["РАЦИОН"]));
            if ((initTable == true)) {
                if ((this.tableРАЦИОН != null)) {
                    this.tableРАЦИОН.InitVars();
                }
            }
            this.tableПРОДУКТ = ((ПРОДУКТDataTable)(base.Tables["ПРОДУКТ"]));
            if ((initTable == true)) {
                if ((this.tableПРОДУКТ != null)) {
                    this.tableПРОДУКТ.InitVars();
                }
            }
            this.tableПАЦИЕНТ = ((ПАЦИЕНТDataTable)(base.Tables["ПАЦИЕНТ"]));
            if ((initTable == true)) {
                if ((this.tableПАЦИЕНТ != null)) {
                    this.tableПАЦИЕНТ.InitVars();
                }
            }
            this.tableDietReport = ((DietReportDataTable)(base.Tables["DietReport"]));
            if ((initTable == true)) {
                if ((this.tableDietReport != null)) {
                    this.tableDietReport.InitVars();
                }
            }
            this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА = ((НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable)(base.Tables["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА"]));
            if ((initTable == true)) {
                if ((this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА != null)) {
                    this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.InitVars();
                }
            }
            this.relationПРОДУКТ_Является_частью_ЭЛЕМЕНТ_РАЦИОНА = this.Relations["ПРОДУКТ_Является_частью_ЭЛЕМЕНТ_РАЦИОНА"];
            this.relationРАЦИОН_Состоит_из_ЭЛЕМЕНТ_РАЦИОНА = this.Relations["РАЦИОН_Состоит_из_ЭЛЕМЕНТ_РАЦИОНА"];
            this.relationКАТЕГОРИЯ_ПРОДУКТОВ_Обладает_СОВМЕСТИМОСТЬ_КАТЕГОРИЙ = this.Relations["КАТЕГОРИЯ_ПРОДУКТОВ_Обладает_СОВМЕСТИМОСТЬ_КАТЕГОРИЙ"];
            this.relationПАЦИЕНТ_Назначается_РАЦИОН = this.Relations["ПАЦИЕНТ_Назначается_РАЦИОН"];
            this.relationКАТЕГОРИЯ_ПРОДУКТОВ_Включает_в_себя_ПРОДУКТ = this.Relations["КАТЕГОРИЯ_ПРОДУКТОВ_Включает_в_себя_ПРОДУКТ"];
            this.relationНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Связан_с_СУТОЧНАЯ_НОРМА_ВЕЩЕСТВА = this.Relations["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Связан_с_СУТОЧНАЯ_НОРМА_ВЕЩЕСТВА"];
            this.relationНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Является_частью_РАЦИОН = this.Relations["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Является_частью_РАЦИОН"];
            this.relationНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Описывает_ПАЦИЕНТ = this.Relations["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Описывает_ПАЦИЕНТ"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DietDBDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DietDBDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableКАТЕГОРИЯ_ПРОДУКТОВ = new КАТЕГОРИЯ_ПРОДУКТОВDataTable();
            base.Tables.Add(this.tableКАТЕГОРИЯ_ПРОДУКТОВ);
            this.tableЭЛЕМЕНТ_РАЦИОНА = new ЭЛЕМЕНТ_РАЦИОНАDataTable();
            base.Tables.Add(this.tableЭЛЕМЕНТ_РАЦИОНА);
            this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ = new СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable();
            base.Tables.Add(this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ);
            this.tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ = new СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable();
            base.Tables.Add(this.tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ);
            this.tableРАЦИОН = new РАЦИОНDataTable();
            base.Tables.Add(this.tableРАЦИОН);
            this.tableПРОДУКТ = new ПРОДУКТDataTable();
            base.Tables.Add(this.tableПРОДУКТ);
            this.tableПАЦИЕНТ = new ПАЦИЕНТDataTable();
            base.Tables.Add(this.tableПАЦИЕНТ);
            this.tableDietReport = new DietReportDataTable();
            base.Tables.Add(this.tableDietReport);
            this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА = new НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable();
            base.Tables.Add(this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА);
            this.relationПРОДУКТ_Является_частью_ЭЛЕМЕНТ_РАЦИОНА = new global::System.Data.DataRelation("ПРОДУКТ_Является_частью_ЭЛЕМЕНТ_РАЦИОНА", new global::System.Data.DataColumn[] {
                        this.tableПРОДУКТ.ID_продуктаColumn}, new global::System.Data.DataColumn[] {
                        this.tableЭЛЕМЕНТ_РАЦИОНА.ID_продуктаColumn}, false);
            this.Relations.Add(this.relationПРОДУКТ_Является_частью_ЭЛЕМЕНТ_РАЦИОНА);
            this.relationРАЦИОН_Состоит_из_ЭЛЕМЕНТ_РАЦИОНА = new global::System.Data.DataRelation("РАЦИОН_Состоит_из_ЭЛЕМЕНТ_РАЦИОНА", new global::System.Data.DataColumn[] {
                        this.tableРАЦИОН.ID_рационаColumn}, new global::System.Data.DataColumn[] {
                        this.tableЭЛЕМЕНТ_РАЦИОНА.ID_рационаColumn}, false);
            this.Relations.Add(this.relationРАЦИОН_Состоит_из_ЭЛЕМЕНТ_РАЦИОНА);
            this.relationКАТЕГОРИЯ_ПРОДУКТОВ_Обладает_СОВМЕСТИМОСТЬ_КАТЕГОРИЙ = new global::System.Data.DataRelation("КАТЕГОРИЯ_ПРОДУКТОВ_Обладает_СОВМЕСТИМОСТЬ_КАТЕГОРИЙ", new global::System.Data.DataColumn[] {
                        this.tableКАТЕГОРИЯ_ПРОДУКТОВ.ID_категории_продуктовColumn}, new global::System.Data.DataColumn[] {
                        this.tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ.ID_категории_продуктовColumn}, false);
            this.Relations.Add(this.relationКАТЕГОРИЯ_ПРОДУКТОВ_Обладает_СОВМЕСТИМОСТЬ_КАТЕГОРИЙ);
            this.relationПАЦИЕНТ_Назначается_РАЦИОН = new global::System.Data.DataRelation("ПАЦИЕНТ_Назначается_РАЦИОН", new global::System.Data.DataColumn[] {
                        this.tableПАЦИЕНТ.ID_пациентаColumn}, new global::System.Data.DataColumn[] {
                        this.tableРАЦИОН.ID_пациентаColumn}, false);
            this.Relations.Add(this.relationПАЦИЕНТ_Назначается_РАЦИОН);
            this.relationКАТЕГОРИЯ_ПРОДУКТОВ_Включает_в_себя_ПРОДУКТ = new global::System.Data.DataRelation("КАТЕГОРИЯ_ПРОДУКТОВ_Включает_в_себя_ПРОДУКТ", new global::System.Data.DataColumn[] {
                        this.tableКАТЕГОРИЯ_ПРОДУКТОВ.ID_категории_продуктовColumn}, new global::System.Data.DataColumn[] {
                        this.tableПРОДУКТ.ID_категории_продуктовColumn}, false);
            this.Relations.Add(this.relationКАТЕГОРИЯ_ПРОДУКТОВ_Включает_в_себя_ПРОДУКТ);
            this.relationНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Связан_с_СУТОЧНАЯ_НОРМА_ВЕЩЕСТВА = new global::System.Data.DataRelation("НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Связан_с_СУТОЧНАЯ_НОРМА_ВЕЩЕСТВА", new global::System.Data.DataColumn[] {
                        this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.ID_набора_параметров_пациентаColumn}, new global::System.Data.DataColumn[] {
                        this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.ID_набора_параметров_пациентаColumn}, false);
            this.Relations.Add(this.relationНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Связан_с_СУТОЧНАЯ_НОРМА_ВЕЩЕСТВА);
            this.relationНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Является_частью_РАЦИОН = new global::System.Data.DataRelation("НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Является_частью_РАЦИОН", new global::System.Data.DataColumn[] {
                        this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.ID_набора_параметров_пациентаColumn}, new global::System.Data.DataColumn[] {
                        this.tableРАЦИОН.ID_набора_параметров_пациентаColumn}, false);
            this.Relations.Add(this.relationНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Является_частью_РАЦИОН);
            this.relationНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Описывает_ПАЦИЕНТ = new global::System.Data.DataRelation("НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Описывает_ПАЦИЕНТ", new global::System.Data.DataColumn[] {
                        this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.ID_набора_параметров_пациентаColumn}, new global::System.Data.DataColumn[] {
                        this.tableПАЦИЕНТ.ID_набора_параметров_пациентаColumn}, false);
            this.Relations.Add(this.relationНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Описывает_ПАЦИЕНТ);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeКАТЕГОРИЯ_ПРОДУКТОВ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeЭЛЕМЕНТ_РАЦИОНА() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeРАЦИОН() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeПРОДУКТ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeПАЦИЕНТ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeDietReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DietDBDataSet ds = new DietDBDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void КАТЕГОРИЯ_ПРОДУКТОВRowChangeEventHandler(object sender, КАТЕГОРИЯ_ПРОДУКТОВRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ЭЛЕМЕНТ_РАЦИОНАRowChangeEventHandler(object sender, ЭЛЕМЕНТ_РАЦИОНАRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChangeEventHandler(object sender, СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChangeEventHandler(object sender, СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void РАЦИОНRowChangeEventHandler(object sender, РАЦИОНRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ПРОДУКТRowChangeEventHandler(object sender, ПРОДУКТRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ПАЦИЕНТRowChangeEventHandler(object sender, ПАЦИЕНТRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void DietReportRowChangeEventHandler(object sender, DietReportRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChangeEventHandler(object sender, НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class КАТЕГОРИЯ_ПРОДУКТОВDataTable : global::System.Data.TypedTableBase<КАТЕГОРИЯ_ПРОДУКТОВRow> {
            
            private global::System.Data.DataColumn columnID_категории_продуктов;
            
            private global::System.Data.DataColumn columnНазвание_категории_продуктов;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КАТЕГОРИЯ_ПРОДУКТОВDataTable() {
                this.TableName = "КАТЕГОРИЯ_ПРОДУКТОВ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal КАТЕГОРИЯ_ПРОДУКТОВDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected КАТЕГОРИЯ_ПРОДУКТОВDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_категории_продуктовColumn {
                get {
                    return this.columnID_категории_продуктов;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Название_категории_продуктовColumn {
                get {
                    return this.columnНазвание_категории_продуктов;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КАТЕГОРИЯ_ПРОДУКТОВRow this[int index] {
                get {
                    return ((КАТЕГОРИЯ_ПРОДУКТОВRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КАТЕГОРИЯ_ПРОДУКТОВRowChangeEventHandler КАТЕГОРИЯ_ПРОДУКТОВRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КАТЕГОРИЯ_ПРОДУКТОВRowChangeEventHandler КАТЕГОРИЯ_ПРОДУКТОВRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КАТЕГОРИЯ_ПРОДУКТОВRowChangeEventHandler КАТЕГОРИЯ_ПРОДУКТОВRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event КАТЕГОРИЯ_ПРОДУКТОВRowChangeEventHandler КАТЕГОРИЯ_ПРОДУКТОВRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddКАТЕГОРИЯ_ПРОДУКТОВRow(КАТЕГОРИЯ_ПРОДУКТОВRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КАТЕГОРИЯ_ПРОДУКТОВRow AddКАТЕГОРИЯ_ПРОДУКТОВRow(string Название_категории_продуктов) {
                КАТЕГОРИЯ_ПРОДУКТОВRow rowКАТЕГОРИЯ_ПРОДУКТОВRow = ((КАТЕГОРИЯ_ПРОДУКТОВRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Название_категории_продуктов};
                rowКАТЕГОРИЯ_ПРОДУКТОВRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowКАТЕГОРИЯ_ПРОДУКТОВRow);
                return rowКАТЕГОРИЯ_ПРОДУКТОВRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КАТЕГОРИЯ_ПРОДУКТОВRow FindByID_категории_продуктов(int ID_категории_продуктов) {
                return ((КАТЕГОРИЯ_ПРОДУКТОВRow)(this.Rows.Find(new object[] {
                            ID_категории_продуктов})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                КАТЕГОРИЯ_ПРОДУКТОВDataTable cln = ((КАТЕГОРИЯ_ПРОДУКТОВDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new КАТЕГОРИЯ_ПРОДУКТОВDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_категории_продуктов = base.Columns["ID_категории_продуктов"];
                this.columnНазвание_категории_продуктов = base.Columns["Название_категории_продуктов"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_категории_продуктов = new global::System.Data.DataColumn("ID_категории_продуктов", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_категории_продуктов);
                this.columnНазвание_категории_продуктов = new global::System.Data.DataColumn("Название_категории_продуктов", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНазвание_категории_продуктов);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_категории_продуктов}, true));
                this.columnID_категории_продуктов.AutoIncrement = true;
                this.columnID_категории_продуктов.AutoIncrementSeed = -1;
                this.columnID_категории_продуктов.AutoIncrementStep = -1;
                this.columnID_категории_продуктов.AllowDBNull = false;
                this.columnID_категории_продуктов.ReadOnly = true;
                this.columnID_категории_продуктов.Unique = true;
                this.columnНазвание_категории_продуктов.AllowDBNull = false;
                this.columnНазвание_категории_продуктов.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КАТЕГОРИЯ_ПРОДУКТОВRow NewКАТЕГОРИЯ_ПРОДУКТОВRow() {
                return ((КАТЕГОРИЯ_ПРОДУКТОВRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new КАТЕГОРИЯ_ПРОДУКТОВRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(КАТЕГОРИЯ_ПРОДУКТОВRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.КАТЕГОРИЯ_ПРОДУКТОВRowChanged != null)) {
                    this.КАТЕГОРИЯ_ПРОДУКТОВRowChanged(this, new КАТЕГОРИЯ_ПРОДУКТОВRowChangeEvent(((КАТЕГОРИЯ_ПРОДУКТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.КАТЕГОРИЯ_ПРОДУКТОВRowChanging != null)) {
                    this.КАТЕГОРИЯ_ПРОДУКТОВRowChanging(this, new КАТЕГОРИЯ_ПРОДУКТОВRowChangeEvent(((КАТЕГОРИЯ_ПРОДУКТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.КАТЕГОРИЯ_ПРОДУКТОВRowDeleted != null)) {
                    this.КАТЕГОРИЯ_ПРОДУКТОВRowDeleted(this, new КАТЕГОРИЯ_ПРОДУКТОВRowChangeEvent(((КАТЕГОРИЯ_ПРОДУКТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.КАТЕГОРИЯ_ПРОДУКТОВRowDeleting != null)) {
                    this.КАТЕГОРИЯ_ПРОДУКТОВRowDeleting(this, new КАТЕГОРИЯ_ПРОДУКТОВRowChangeEvent(((КАТЕГОРИЯ_ПРОДУКТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveКАТЕГОРИЯ_ПРОДУКТОВRow(КАТЕГОРИЯ_ПРОДУКТОВRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DietDBDataSet ds = new DietDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "КАТЕГОРИЯ_ПРОДУКТОВDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ЭЛЕМЕНТ_РАЦИОНАDataTable : global::System.Data.TypedTableBase<ЭЛЕМЕНТ_РАЦИОНАRow> {
            
            private global::System.Data.DataColumn columnID_продукта;
            
            private global::System.Data.DataColumn columnКоличество_продукта;
            
            private global::System.Data.DataColumn columnID_элемента_рациона;
            
            private global::System.Data.DataColumn columnID_рациона;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЭЛЕМЕНТ_РАЦИОНАDataTable() {
                this.TableName = "ЭЛЕМЕНТ_РАЦИОНА";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ЭЛЕМЕНТ_РАЦИОНАDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ЭЛЕМЕНТ_РАЦИОНАDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_продуктаColumn {
                get {
                    return this.columnID_продукта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Количество_продуктаColumn {
                get {
                    return this.columnКоличество_продукта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_элемента_рационаColumn {
                get {
                    return this.columnID_элемента_рациона;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_рационаColumn {
                get {
                    return this.columnID_рациона;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЭЛЕМЕНТ_РАЦИОНАRow this[int index] {
                get {
                    return ((ЭЛЕМЕНТ_РАЦИОНАRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ЭЛЕМЕНТ_РАЦИОНАRowChangeEventHandler ЭЛЕМЕНТ_РАЦИОНАRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ЭЛЕМЕНТ_РАЦИОНАRowChangeEventHandler ЭЛЕМЕНТ_РАЦИОНАRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ЭЛЕМЕНТ_РАЦИОНАRowChangeEventHandler ЭЛЕМЕНТ_РАЦИОНАRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ЭЛЕМЕНТ_РАЦИОНАRowChangeEventHandler ЭЛЕМЕНТ_РАЦИОНАRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddЭЛЕМЕНТ_РАЦИОНАRow(ЭЛЕМЕНТ_РАЦИОНАRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЭЛЕМЕНТ_РАЦИОНАRow AddЭЛЕМЕНТ_РАЦИОНАRow(ПРОДУКТRow parentПРОДУКТRowByПРОДУКТ_Является_частью_ЭЛЕМЕНТ_РАЦИОНА, int Количество_продукта, РАЦИОНRow parentРАЦИОНRowByРАЦИОН_Состоит_из_ЭЛЕМЕНТ_РАЦИОНА) {
                ЭЛЕМЕНТ_РАЦИОНАRow rowЭЛЕМЕНТ_РАЦИОНАRow = ((ЭЛЕМЕНТ_РАЦИОНАRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Количество_продукта,
                        null,
                        null};
                if ((parentПРОДУКТRowByПРОДУКТ_Является_частью_ЭЛЕМЕНТ_РАЦИОНА != null)) {
                    columnValuesArray[0] = parentПРОДУКТRowByПРОДУКТ_Является_частью_ЭЛЕМЕНТ_РАЦИОНА[0];
                }
                if ((parentРАЦИОНRowByРАЦИОН_Состоит_из_ЭЛЕМЕНТ_РАЦИОНА != null)) {
                    columnValuesArray[3] = parentРАЦИОНRowByРАЦИОН_Состоит_из_ЭЛЕМЕНТ_РАЦИОНА[0];
                }
                rowЭЛЕМЕНТ_РАЦИОНАRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowЭЛЕМЕНТ_РАЦИОНАRow);
                return rowЭЛЕМЕНТ_РАЦИОНАRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЭЛЕМЕНТ_РАЦИОНАRow FindByID_элемента_рационаID_рациона(int ID_элемента_рациона, int ID_рациона) {
                return ((ЭЛЕМЕНТ_РАЦИОНАRow)(this.Rows.Find(new object[] {
                            ID_элемента_рациона,
                            ID_рациона})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ЭЛЕМЕНТ_РАЦИОНАDataTable cln = ((ЭЛЕМЕНТ_РАЦИОНАDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ЭЛЕМЕНТ_РАЦИОНАDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_продукта = base.Columns["ID_продукта"];
                this.columnКоличество_продукта = base.Columns["Количество_продукта"];
                this.columnID_элемента_рациона = base.Columns["ID_элемента_рациона"];
                this.columnID_рациона = base.Columns["ID_рациона"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_продукта = new global::System.Data.DataColumn("ID_продукта", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_продукта);
                this.columnКоличество_продукта = new global::System.Data.DataColumn("Количество_продукта", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКоличество_продукта);
                this.columnID_элемента_рациона = new global::System.Data.DataColumn("ID_элемента_рациона", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_элемента_рациона);
                this.columnID_рациона = new global::System.Data.DataColumn("ID_рациона", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_рациона);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_элемента_рациона,
                                this.columnID_рациона}, true));
                this.columnID_продукта.AllowDBNull = false;
                this.columnКоличество_продукта.AllowDBNull = false;
                this.columnID_элемента_рациона.AutoIncrement = true;
                this.columnID_элемента_рациона.AutoIncrementSeed = -1;
                this.columnID_элемента_рациона.AutoIncrementStep = -1;
                this.columnID_элемента_рациона.AllowDBNull = false;
                this.columnID_элемента_рациона.ReadOnly = true;
                this.columnID_рациона.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЭЛЕМЕНТ_РАЦИОНАRow NewЭЛЕМЕНТ_РАЦИОНАRow() {
                return ((ЭЛЕМЕНТ_РАЦИОНАRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ЭЛЕМЕНТ_РАЦИОНАRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ЭЛЕМЕНТ_РАЦИОНАRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ЭЛЕМЕНТ_РАЦИОНАRowChanged != null)) {
                    this.ЭЛЕМЕНТ_РАЦИОНАRowChanged(this, new ЭЛЕМЕНТ_РАЦИОНАRowChangeEvent(((ЭЛЕМЕНТ_РАЦИОНАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ЭЛЕМЕНТ_РАЦИОНАRowChanging != null)) {
                    this.ЭЛЕМЕНТ_РАЦИОНАRowChanging(this, new ЭЛЕМЕНТ_РАЦИОНАRowChangeEvent(((ЭЛЕМЕНТ_РАЦИОНАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ЭЛЕМЕНТ_РАЦИОНАRowDeleted != null)) {
                    this.ЭЛЕМЕНТ_РАЦИОНАRowDeleted(this, new ЭЛЕМЕНТ_РАЦИОНАRowChangeEvent(((ЭЛЕМЕНТ_РАЦИОНАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ЭЛЕМЕНТ_РАЦИОНАRowDeleting != null)) {
                    this.ЭЛЕМЕНТ_РАЦИОНАRowDeleting(this, new ЭЛЕМЕНТ_РАЦИОНАRowChangeEvent(((ЭЛЕМЕНТ_РАЦИОНАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveЭЛЕМЕНТ_РАЦИОНАRow(ЭЛЕМЕНТ_РАЦИОНАRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DietDBDataSet ds = new DietDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ЭЛЕМЕНТ_РАЦИОНАDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable : global::System.Data.TypedTableBase<СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow> {
            
            private global::System.Data.DataColumn columnID_набора_параметров_пациента;
            
            private global::System.Data.DataColumn columnЗначение_суточной_нормы_белков;
            
            private global::System.Data.DataColumn columnЗначение_суточной_нормы_жиров;
            
            private global::System.Data.DataColumn columnЗначение_суточной_нормы_углеводов;
            
            private global::System.Data.DataColumn columnЗначение_суточной_нормы_витамина_A;
            
            private global::System.Data.DataColumn columnЗначение_суточной_нормы_витамина_B1;
            
            private global::System.Data.DataColumn columnЗначение_суточной_нормы_витамина_C;
            
            private global::System.Data.DataColumn columnЗначение_суточной_нормы_калорий;
            
            private global::System.Data.DataColumn columnЗначение_суточной_нормы_клетчатки;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable() {
                this.TableName = "СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_набора_параметров_пациентаColumn {
                get {
                    return this.columnID_набора_параметров_пациента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Значение_суточной_нормы_белковColumn {
                get {
                    return this.columnЗначение_суточной_нормы_белков;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Значение_суточной_нормы_жировColumn {
                get {
                    return this.columnЗначение_суточной_нормы_жиров;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Значение_суточной_нормы_углеводовColumn {
                get {
                    return this.columnЗначение_суточной_нормы_углеводов;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Значение_суточной_нормы_витамина_AColumn {
                get {
                    return this.columnЗначение_суточной_нормы_витамина_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Значение_суточной_нормы_витамина_B1Column {
                get {
                    return this.columnЗначение_суточной_нормы_витамина_B1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Значение_суточной_нормы_витамина_CColumn {
                get {
                    return this.columnЗначение_суточной_нормы_витамина_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Значение_суточной_нормы_калорийColumn {
                get {
                    return this.columnЗначение_суточной_нормы_калорий;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Значение_суточной_нормы_клетчаткиColumn {
                get {
                    return this.columnЗначение_суточной_нормы_клетчатки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow this[int index] {
                get {
                    return ((СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChangeEventHandler СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChangeEventHandler СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChangeEventHandler СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChangeEventHandler СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddСУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow(СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow AddСУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow(decimal Значение_суточной_нормы_белков, decimal Значение_суточной_нормы_жиров, decimal Значение_суточной_нормы_углеводов, decimal Значение_суточной_нормы_витамина_A, decimal Значение_суточной_нормы_витамина_B1, decimal Значение_суточной_нормы_витамина_C, int Значение_суточной_нормы_калорий, decimal Значение_суточной_нормы_клетчатки) {
                СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow rowСУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow = ((СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Значение_суточной_нормы_белков,
                        Значение_суточной_нормы_жиров,
                        Значение_суточной_нормы_углеводов,
                        Значение_суточной_нормы_витамина_A,
                        Значение_суточной_нормы_витамина_B1,
                        Значение_суточной_нормы_витамина_C,
                        Значение_суточной_нормы_калорий,
                        Значение_суточной_нормы_клетчатки};
                rowСУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow);
                return rowСУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow FindByID_набора_параметров_пациента(int ID_набора_параметров_пациента) {
                return ((СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow)(this.Rows.Find(new object[] {
                            ID_набора_параметров_пациента})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable cln = ((СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_набора_параметров_пациента = base.Columns["ID_набора_параметров_пациента"];
                this.columnЗначение_суточной_нормы_белков = base.Columns["Значение_суточной_нормы_белков"];
                this.columnЗначение_суточной_нормы_жиров = base.Columns["Значение_суточной_нормы_жиров"];
                this.columnЗначение_суточной_нормы_углеводов = base.Columns["Значение_суточной_нормы_углеводов"];
                this.columnЗначение_суточной_нормы_витамина_A = base.Columns["Значение_суточной_нормы_витамина_A"];
                this.columnЗначение_суточной_нормы_витамина_B1 = base.Columns["Значение_суточной_нормы_витамина_B1"];
                this.columnЗначение_суточной_нормы_витамина_C = base.Columns["Значение_суточной_нормы_витамина_C"];
                this.columnЗначение_суточной_нормы_калорий = base.Columns["Значение_суточной_нормы_калорий"];
                this.columnЗначение_суточной_нормы_клетчатки = base.Columns["Значение_суточной_нормы_клетчатки"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_набора_параметров_пациента = new global::System.Data.DataColumn("ID_набора_параметров_пациента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_набора_параметров_пациента);
                this.columnЗначение_суточной_нормы_белков = new global::System.Data.DataColumn("Значение_суточной_нормы_белков", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗначение_суточной_нормы_белков);
                this.columnЗначение_суточной_нормы_жиров = new global::System.Data.DataColumn("Значение_суточной_нормы_жиров", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗначение_суточной_нормы_жиров);
                this.columnЗначение_суточной_нормы_углеводов = new global::System.Data.DataColumn("Значение_суточной_нормы_углеводов", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗначение_суточной_нормы_углеводов);
                this.columnЗначение_суточной_нормы_витамина_A = new global::System.Data.DataColumn("Значение_суточной_нормы_витамина_A", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗначение_суточной_нормы_витамина_A);
                this.columnЗначение_суточной_нормы_витамина_B1 = new global::System.Data.DataColumn("Значение_суточной_нормы_витамина_B1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗначение_суточной_нормы_витамина_B1);
                this.columnЗначение_суточной_нормы_витамина_C = new global::System.Data.DataColumn("Значение_суточной_нормы_витамина_C", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗначение_суточной_нормы_витамина_C);
                this.columnЗначение_суточной_нормы_калорий = new global::System.Data.DataColumn("Значение_суточной_нормы_калорий", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗначение_суточной_нормы_калорий);
                this.columnЗначение_суточной_нормы_клетчатки = new global::System.Data.DataColumn("Значение_суточной_нормы_клетчатки", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗначение_суточной_нормы_клетчатки);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_набора_параметров_пациента}, true));
                this.columnID_набора_параметров_пациента.AutoIncrement = true;
                this.columnID_набора_параметров_пациента.AutoIncrementSeed = -1;
                this.columnID_набора_параметров_пациента.AutoIncrementStep = -1;
                this.columnID_набора_параметров_пациента.AllowDBNull = false;
                this.columnID_набора_параметров_пациента.ReadOnly = true;
                this.columnID_набора_параметров_пациента.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow NewСУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow() {
                return ((СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChanged != null)) {
                    this.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChanged(this, new СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChangeEvent(((СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChanging != null)) {
                    this.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChanging(this, new СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChangeEvent(((СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowDeleted != null)) {
                    this.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowDeleted(this, new СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChangeEvent(((СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowDeleting != null)) {
                    this.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowDeleting(this, new СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChangeEvent(((СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveСУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow(СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DietDBDataSet ds = new DietDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable : global::System.Data.TypedTableBase<СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow> {
            
            private global::System.Data.DataColumn columnID_категории_продуктов;
            
            private global::System.Data.DataColumn columnID_совместимой_категории_продуктов;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable() {
                this.TableName = "СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_категории_продуктовColumn {
                get {
                    return this.columnID_категории_продуктов;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_совместимой_категории_продуктовColumn {
                get {
                    return this.columnID_совместимой_категории_продуктов;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow this[int index] {
                get {
                    return ((СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChangeEventHandler СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChangeEventHandler СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChangeEventHandler СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChangeEventHandler СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow(СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow AddСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow(КАТЕГОРИЯ_ПРОДУКТОВRow parentКАТЕГОРИЯ_ПРОДУКТОВRowByКАТЕГОРИЯ_ПРОДУКТОВ_Обладает_СОВМЕСТИМОСТЬ_КАТЕГОРИЙ, int ID_совместимой_категории_продуктов) {
                СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow rowСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow = ((СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ID_совместимой_категории_продуктов};
                if ((parentКАТЕГОРИЯ_ПРОДУКТОВRowByКАТЕГОРИЯ_ПРОДУКТОВ_Обладает_СОВМЕСТИМОСТЬ_КАТЕГОРИЙ != null)) {
                    columnValuesArray[0] = parentКАТЕГОРИЯ_ПРОДУКТОВRowByКАТЕГОРИЯ_ПРОДУКТОВ_Обладает_СОВМЕСТИМОСТЬ_КАТЕГОРИЙ[0];
                }
                rowСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow);
                return rowСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable cln = ((СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_категории_продуктов = base.Columns["ID_категории_продуктов"];
                this.columnID_совместимой_категории_продуктов = base.Columns["ID_совместимой_категории_продуктов"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_категории_продуктов = new global::System.Data.DataColumn("ID_категории_продуктов", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_категории_продуктов);
                this.columnID_совместимой_категории_продуктов = new global::System.Data.DataColumn("ID_совместимой_категории_продуктов", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_совместимой_категории_продуктов);
                this.columnID_категории_продуктов.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow NewСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow() {
                return ((СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChanged != null)) {
                    this.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChanged(this, new СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChangeEvent(((СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChanging != null)) {
                    this.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChanging(this, new СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChangeEvent(((СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowDeleted != null)) {
                    this.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowDeleted(this, new СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChangeEvent(((СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowDeleting != null)) {
                    this.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowDeleting(this, new СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChangeEvent(((СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow(СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DietDBDataSet ds = new DietDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class РАЦИОНDataTable : global::System.Data.TypedTableBase<РАЦИОНRow> {
            
            private global::System.Data.DataColumn columnID_рациона;
            
            private global::System.Data.DataColumn columnID_набора_параметров_пациента;
            
            private global::System.Data.DataColumn columnДоступный_бюджет;
            
            private global::System.Data.DataColumn columnID_пациента;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РАЦИОНDataTable() {
                this.TableName = "РАЦИОН";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal РАЦИОНDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected РАЦИОНDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_рационаColumn {
                get {
                    return this.columnID_рациона;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_набора_параметров_пациентаColumn {
                get {
                    return this.columnID_набора_параметров_пациента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Доступный_бюджетColumn {
                get {
                    return this.columnДоступный_бюджет;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_пациентаColumn {
                get {
                    return this.columnID_пациента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РАЦИОНRow this[int index] {
                get {
                    return ((РАЦИОНRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event РАЦИОНRowChangeEventHandler РАЦИОНRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event РАЦИОНRowChangeEventHandler РАЦИОНRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event РАЦИОНRowChangeEventHandler РАЦИОНRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event РАЦИОНRowChangeEventHandler РАЦИОНRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddРАЦИОНRow(РАЦИОНRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РАЦИОНRow AddРАЦИОНRow(НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow parentНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowByНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Является_частью_РАЦИОН, int Доступный_бюджет, ПАЦИЕНТRow parentПАЦИЕНТRowByПАЦИЕНТ_Назначается_РАЦИОН) {
                РАЦИОНRow rowРАЦИОНRow = ((РАЦИОНRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Доступный_бюджет,
                        null};
                if ((parentНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowByНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Является_частью_РАЦИОН != null)) {
                    columnValuesArray[1] = parentНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowByНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Является_частью_РАЦИОН[0];
                }
                if ((parentПАЦИЕНТRowByПАЦИЕНТ_Назначается_РАЦИОН != null)) {
                    columnValuesArray[3] = parentПАЦИЕНТRowByПАЦИЕНТ_Назначается_РАЦИОН[1];
                }
                rowРАЦИОНRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowРАЦИОНRow);
                return rowРАЦИОНRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РАЦИОНRow FindByID_рациона(int ID_рациона) {
                return ((РАЦИОНRow)(this.Rows.Find(new object[] {
                            ID_рациона})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                РАЦИОНDataTable cln = ((РАЦИОНDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new РАЦИОНDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_рациона = base.Columns["ID_рациона"];
                this.columnID_набора_параметров_пациента = base.Columns["ID_набора_параметров_пациента"];
                this.columnДоступный_бюджет = base.Columns["Доступный_бюджет"];
                this.columnID_пациента = base.Columns["ID_пациента"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_рациона = new global::System.Data.DataColumn("ID_рациона", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_рациона);
                this.columnID_набора_параметров_пациента = new global::System.Data.DataColumn("ID_набора_параметров_пациента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_набора_параметров_пациента);
                this.columnДоступный_бюджет = new global::System.Data.DataColumn("Доступный_бюджет", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДоступный_бюджет);
                this.columnID_пациента = new global::System.Data.DataColumn("ID_пациента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_пациента);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_рациона}, true));
                this.columnID_рациона.AutoIncrement = true;
                this.columnID_рациона.AutoIncrementSeed = -1;
                this.columnID_рациона.AutoIncrementStep = -1;
                this.columnID_рациона.AllowDBNull = false;
                this.columnID_рациона.ReadOnly = true;
                this.columnID_рациона.Unique = true;
                this.columnID_набора_параметров_пациента.AllowDBNull = false;
                this.columnДоступный_бюджет.AllowDBNull = false;
                this.columnID_пациента.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РАЦИОНRow NewРАЦИОНRow() {
                return ((РАЦИОНRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new РАЦИОНRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(РАЦИОНRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.РАЦИОНRowChanged != null)) {
                    this.РАЦИОНRowChanged(this, new РАЦИОНRowChangeEvent(((РАЦИОНRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.РАЦИОНRowChanging != null)) {
                    this.РАЦИОНRowChanging(this, new РАЦИОНRowChangeEvent(((РАЦИОНRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.РАЦИОНRowDeleted != null)) {
                    this.РАЦИОНRowDeleted(this, new РАЦИОНRowChangeEvent(((РАЦИОНRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.РАЦИОНRowDeleting != null)) {
                    this.РАЦИОНRowDeleting(this, new РАЦИОНRowChangeEvent(((РАЦИОНRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveРАЦИОНRow(РАЦИОНRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DietDBDataSet ds = new DietDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "РАЦИОНDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ПРОДУКТDataTable : global::System.Data.TypedTableBase<ПРОДУКТRow> {
            
            private global::System.Data.DataColumn columnID_продукта;
            
            private global::System.Data.DataColumn columnНазвание_продукта;
            
            private global::System.Data.DataColumn columnСодержание_белков_на_100_г_продукта;
            
            private global::System.Data.DataColumn columnСодержание_жиров_на_100_г_продукта;
            
            private global::System.Data.DataColumn columnСодержание_углеводов_на_100_г_продукта;
            
            private global::System.Data.DataColumn columnСодержание_витамина_A_на_100_г_продукта;
            
            private global::System.Data.DataColumn columnСодержание_витамина_B1_на_100_г_продукта;
            
            private global::System.Data.DataColumn columnСодержание_витамина_C_на_100_г_продукта;
            
            private global::System.Data.DataColumn columnКалорийность_на_100_г_продукта;
            
            private global::System.Data.DataColumn columnID_категории_продуктов;
            
            private global::System.Data.DataColumn columnСтоимость_100_г_продукта;
            
            private global::System.Data.DataColumn columnСодержание_клетчатки_на_100_г_продукта;
            
            private global::System.Data.DataColumn columnЗапрет_при_гастрите;
            
            private global::System.Data.DataColumn columnЗапрет_при_диабете;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПРОДУКТDataTable() {
                this.TableName = "ПРОДУКТ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ПРОДУКТDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ПРОДУКТDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_продуктаColumn {
                get {
                    return this.columnID_продукта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Название_продуктаColumn {
                get {
                    return this.columnНазвание_продукта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Содержание_белков_на_100_г_продуктаColumn {
                get {
                    return this.columnСодержание_белков_на_100_г_продукта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Содержание_жиров_на_100_г_продуктаColumn {
                get {
                    return this.columnСодержание_жиров_на_100_г_продукта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Содержание_углеводов_на_100_г_продуктаColumn {
                get {
                    return this.columnСодержание_углеводов_на_100_г_продукта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Содержание_витамина_A_на_100_г_продуктаColumn {
                get {
                    return this.columnСодержание_витамина_A_на_100_г_продукта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Содержание_витамина_B1_на_100_г_продуктаColumn {
                get {
                    return this.columnСодержание_витамина_B1_на_100_г_продукта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Содержание_витамина_C_на_100_г_продуктаColumn {
                get {
                    return this.columnСодержание_витамина_C_на_100_г_продукта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Калорийность_на_100_г_продуктаColumn {
                get {
                    return this.columnКалорийность_на_100_г_продукта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_категории_продуктовColumn {
                get {
                    return this.columnID_категории_продуктов;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Стоимость_100_г_продуктаColumn {
                get {
                    return this.columnСтоимость_100_г_продукта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Содержание_клетчатки_на_100_г_продуктаColumn {
                get {
                    return this.columnСодержание_клетчатки_на_100_г_продукта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Запрет_при_гастритеColumn {
                get {
                    return this.columnЗапрет_при_гастрите;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Запрет_при_диабетеColumn {
                get {
                    return this.columnЗапрет_при_диабете;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПРОДУКТRow this[int index] {
                get {
                    return ((ПРОДУКТRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПРОДУКТRowChangeEventHandler ПРОДУКТRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПРОДУКТRowChangeEventHandler ПРОДУКТRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПРОДУКТRowChangeEventHandler ПРОДУКТRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПРОДУКТRowChangeEventHandler ПРОДУКТRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddПРОДУКТRow(ПРОДУКТRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПРОДУКТRow AddПРОДУКТRow(string Название_продукта, decimal Содержание_белков_на_100_г_продукта, decimal Содержание_жиров_на_100_г_продукта, decimal Содержание_углеводов_на_100_г_продукта, decimal Содержание_витамина_A_на_100_г_продукта, decimal Содержание_витамина_B1_на_100_г_продукта, decimal Содержание_витамина_C_на_100_г_продукта, int Калорийность_на_100_г_продукта, КАТЕГОРИЯ_ПРОДУКТОВRow parentКАТЕГОРИЯ_ПРОДУКТОВRowByКАТЕГОРИЯ_ПРОДУКТОВ_Включает_в_себя_ПРОДУКТ, decimal Стоимость_100_г_продукта, decimal Содержание_клетчатки_на_100_г_продукта, byte Запрет_при_гастрите, byte Запрет_при_диабете) {
                ПРОДУКТRow rowПРОДУКТRow = ((ПРОДУКТRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Название_продукта,
                        Содержание_белков_на_100_г_продукта,
                        Содержание_жиров_на_100_г_продукта,
                        Содержание_углеводов_на_100_г_продукта,
                        Содержание_витамина_A_на_100_г_продукта,
                        Содержание_витамина_B1_на_100_г_продукта,
                        Содержание_витамина_C_на_100_г_продукта,
                        Калорийность_на_100_г_продукта,
                        null,
                        Стоимость_100_г_продукта,
                        Содержание_клетчатки_на_100_г_продукта,
                        Запрет_при_гастрите,
                        Запрет_при_диабете};
                if ((parentКАТЕГОРИЯ_ПРОДУКТОВRowByКАТЕГОРИЯ_ПРОДУКТОВ_Включает_в_себя_ПРОДУКТ != null)) {
                    columnValuesArray[9] = parentКАТЕГОРИЯ_ПРОДУКТОВRowByКАТЕГОРИЯ_ПРОДУКТОВ_Включает_в_себя_ПРОДУКТ[0];
                }
                rowПРОДУКТRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПРОДУКТRow);
                return rowПРОДУКТRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПРОДУКТRow FindByID_продукта(int ID_продукта) {
                return ((ПРОДУКТRow)(this.Rows.Find(new object[] {
                            ID_продукта})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ПРОДУКТDataTable cln = ((ПРОДУКТDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ПРОДУКТDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_продукта = base.Columns["ID_продукта"];
                this.columnНазвание_продукта = base.Columns["Название_продукта"];
                this.columnСодержание_белков_на_100_г_продукта = base.Columns["Содержание_белков_на_100_г_продукта"];
                this.columnСодержание_жиров_на_100_г_продукта = base.Columns["Содержание_жиров_на_100_г_продукта"];
                this.columnСодержание_углеводов_на_100_г_продукта = base.Columns["Содержание_углеводов_на_100_г_продукта"];
                this.columnСодержание_витамина_A_на_100_г_продукта = base.Columns["Содержание_витамина_A_на_100_г_продукта"];
                this.columnСодержание_витамина_B1_на_100_г_продукта = base.Columns["Содержание_витамина_B1_на_100_г_продукта"];
                this.columnСодержание_витамина_C_на_100_г_продукта = base.Columns["Содержание_витамина_C_на_100_г_продукта"];
                this.columnКалорийность_на_100_г_продукта = base.Columns["Калорийность_на_100_г_продукта"];
                this.columnID_категории_продуктов = base.Columns["ID_категории_продуктов"];
                this.columnСтоимость_100_г_продукта = base.Columns["Стоимость_100_г_продукта"];
                this.columnСодержание_клетчатки_на_100_г_продукта = base.Columns["Содержание_клетчатки_на_100_г_продукта"];
                this.columnЗапрет_при_гастрите = base.Columns["Запрет_при_гастрите"];
                this.columnЗапрет_при_диабете = base.Columns["Запрет_при_диабете"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_продукта = new global::System.Data.DataColumn("ID_продукта", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_продукта);
                this.columnНазвание_продукта = new global::System.Data.DataColumn("Название_продукта", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНазвание_продукта);
                this.columnСодержание_белков_на_100_г_продукта = new global::System.Data.DataColumn("Содержание_белков_на_100_г_продукта", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСодержание_белков_на_100_г_продукта);
                this.columnСодержание_жиров_на_100_г_продукта = new global::System.Data.DataColumn("Содержание_жиров_на_100_г_продукта", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСодержание_жиров_на_100_г_продукта);
                this.columnСодержание_углеводов_на_100_г_продукта = new global::System.Data.DataColumn("Содержание_углеводов_на_100_г_продукта", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСодержание_углеводов_на_100_г_продукта);
                this.columnСодержание_витамина_A_на_100_г_продукта = new global::System.Data.DataColumn("Содержание_витамина_A_на_100_г_продукта", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСодержание_витамина_A_на_100_г_продукта);
                this.columnСодержание_витамина_B1_на_100_г_продукта = new global::System.Data.DataColumn("Содержание_витамина_B1_на_100_г_продукта", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСодержание_витамина_B1_на_100_г_продукта);
                this.columnСодержание_витамина_C_на_100_г_продукта = new global::System.Data.DataColumn("Содержание_витамина_C_на_100_г_продукта", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСодержание_витамина_C_на_100_г_продукта);
                this.columnКалорийность_на_100_г_продукта = new global::System.Data.DataColumn("Калорийность_на_100_г_продукта", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКалорийность_на_100_г_продукта);
                this.columnID_категории_продуктов = new global::System.Data.DataColumn("ID_категории_продуктов", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_категории_продуктов);
                this.columnСтоимость_100_г_продукта = new global::System.Data.DataColumn("Стоимость_100_г_продукта", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСтоимость_100_г_продукта);
                this.columnСодержание_клетчатки_на_100_г_продукта = new global::System.Data.DataColumn("Содержание_клетчатки_на_100_г_продукта", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСодержание_клетчатки_на_100_г_продукта);
                this.columnЗапрет_при_гастрите = new global::System.Data.DataColumn("Запрет_при_гастрите", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗапрет_при_гастрите);
                this.columnЗапрет_при_диабете = new global::System.Data.DataColumn("Запрет_при_диабете", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗапрет_при_диабете);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_продукта}, true));
                this.columnID_продукта.AutoIncrement = true;
                this.columnID_продукта.AutoIncrementSeed = -1;
                this.columnID_продукта.AutoIncrementStep = -1;
                this.columnID_продукта.AllowDBNull = false;
                this.columnID_продукта.ReadOnly = true;
                this.columnID_продукта.Unique = true;
                this.columnНазвание_продукта.AllowDBNull = false;
                this.columnНазвание_продукта.MaxLength = 30;
                this.columnСодержание_белков_на_100_г_продукта.AllowDBNull = false;
                this.columnСодержание_жиров_на_100_г_продукта.AllowDBNull = false;
                this.columnСодержание_углеводов_на_100_г_продукта.AllowDBNull = false;
                this.columnСодержание_витамина_A_на_100_г_продукта.AllowDBNull = false;
                this.columnСодержание_витамина_B1_на_100_г_продукта.AllowDBNull = false;
                this.columnСодержание_витамина_C_на_100_г_продукта.AllowDBNull = false;
                this.columnКалорийность_на_100_г_продукта.AllowDBNull = false;
                this.columnID_категории_продуктов.AllowDBNull = false;
                this.columnСтоимость_100_г_продукта.AllowDBNull = false;
                this.columnСодержание_клетчатки_на_100_г_продукта.AllowDBNull = false;
                this.columnЗапрет_при_гастрите.AllowDBNull = false;
                this.columnЗапрет_при_диабете.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПРОДУКТRow NewПРОДУКТRow() {
                return ((ПРОДУКТRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ПРОДУКТRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ПРОДУКТRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ПРОДУКТRowChanged != null)) {
                    this.ПРОДУКТRowChanged(this, new ПРОДУКТRowChangeEvent(((ПРОДУКТRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ПРОДУКТRowChanging != null)) {
                    this.ПРОДУКТRowChanging(this, new ПРОДУКТRowChangeEvent(((ПРОДУКТRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ПРОДУКТRowDeleted != null)) {
                    this.ПРОДУКТRowDeleted(this, new ПРОДУКТRowChangeEvent(((ПРОДУКТRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ПРОДУКТRowDeleting != null)) {
                    this.ПРОДУКТRowDeleting(this, new ПРОДУКТRowChangeEvent(((ПРОДУКТRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveПРОДУКТRow(ПРОДУКТRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DietDBDataSet ds = new DietDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ПРОДУКТDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ПАЦИЕНТDataTable : global::System.Data.TypedTableBase<ПАЦИЕНТRow> {
            
            private global::System.Data.DataColumn columnID_набора_параметров_пациента;
            
            private global::System.Data.DataColumn columnID_пациента;
            
            private global::System.Data.DataColumn columnФамилия_пациента;
            
            private global::System.Data.DataColumn columnИмя_пациента;
            
            private global::System.Data.DataColumn columnОтчество_пациента;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПАЦИЕНТDataTable() {
                this.TableName = "ПАЦИЕНТ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ПАЦИЕНТDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ПАЦИЕНТDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_набора_параметров_пациентаColumn {
                get {
                    return this.columnID_набора_параметров_пациента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_пациентаColumn {
                get {
                    return this.columnID_пациента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Фамилия_пациентаColumn {
                get {
                    return this.columnФамилия_пациента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Имя_пациентаColumn {
                get {
                    return this.columnИмя_пациента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Отчество_пациентаColumn {
                get {
                    return this.columnОтчество_пациента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПАЦИЕНТRow this[int index] {
                get {
                    return ((ПАЦИЕНТRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПАЦИЕНТRowChangeEventHandler ПАЦИЕНТRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПАЦИЕНТRowChangeEventHandler ПАЦИЕНТRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПАЦИЕНТRowChangeEventHandler ПАЦИЕНТRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПАЦИЕНТRowChangeEventHandler ПАЦИЕНТRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddПАЦИЕНТRow(ПАЦИЕНТRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПАЦИЕНТRow AddПАЦИЕНТRow(НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow parentНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowByНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Описывает_ПАЦИЕНТ, string Фамилия_пациента, string Имя_пациента, string Отчество_пациента) {
                ПАЦИЕНТRow rowПАЦИЕНТRow = ((ПАЦИЕНТRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Фамилия_пациента,
                        Имя_пациента,
                        Отчество_пациента};
                if ((parentНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowByНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Описывает_ПАЦИЕНТ != null)) {
                    columnValuesArray[0] = parentНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowByНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Описывает_ПАЦИЕНТ[0];
                }
                rowПАЦИЕНТRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПАЦИЕНТRow);
                return rowПАЦИЕНТRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПАЦИЕНТRow FindByID_пациента(int ID_пациента) {
                return ((ПАЦИЕНТRow)(this.Rows.Find(new object[] {
                            ID_пациента})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ПАЦИЕНТDataTable cln = ((ПАЦИЕНТDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ПАЦИЕНТDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_набора_параметров_пациента = base.Columns["ID_набора_параметров_пациента"];
                this.columnID_пациента = base.Columns["ID_пациента"];
                this.columnФамилия_пациента = base.Columns["Фамилия_пациента"];
                this.columnИмя_пациента = base.Columns["Имя_пациента"];
                this.columnОтчество_пациента = base.Columns["Отчество_пациента"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_набора_параметров_пациента = new global::System.Data.DataColumn("ID_набора_параметров_пациента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_набора_параметров_пациента);
                this.columnID_пациента = new global::System.Data.DataColumn("ID_пациента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_пациента);
                this.columnФамилия_пациента = new global::System.Data.DataColumn("Фамилия_пациента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФамилия_пациента);
                this.columnИмя_пациента = new global::System.Data.DataColumn("Имя_пациента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИмя_пациента);
                this.columnОтчество_пациента = new global::System.Data.DataColumn("Отчество_пациента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОтчество_пациента);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_пациента}, true));
                this.columnID_набора_параметров_пациента.AllowDBNull = false;
                this.columnID_пациента.AutoIncrement = true;
                this.columnID_пациента.AutoIncrementSeed = -1;
                this.columnID_пациента.AutoIncrementStep = -1;
                this.columnID_пациента.AllowDBNull = false;
                this.columnID_пациента.ReadOnly = true;
                this.columnID_пациента.Unique = true;
                this.columnФамилия_пациента.AllowDBNull = false;
                this.columnФамилия_пациента.MaxLength = 20;
                this.columnИмя_пациента.AllowDBNull = false;
                this.columnИмя_пациента.MaxLength = 20;
                this.columnОтчество_пациента.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПАЦИЕНТRow NewПАЦИЕНТRow() {
                return ((ПАЦИЕНТRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ПАЦИЕНТRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ПАЦИЕНТRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ПАЦИЕНТRowChanged != null)) {
                    this.ПАЦИЕНТRowChanged(this, new ПАЦИЕНТRowChangeEvent(((ПАЦИЕНТRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ПАЦИЕНТRowChanging != null)) {
                    this.ПАЦИЕНТRowChanging(this, new ПАЦИЕНТRowChangeEvent(((ПАЦИЕНТRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ПАЦИЕНТRowDeleted != null)) {
                    this.ПАЦИЕНТRowDeleted(this, new ПАЦИЕНТRowChangeEvent(((ПАЦИЕНТRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ПАЦИЕНТRowDeleting != null)) {
                    this.ПАЦИЕНТRowDeleting(this, new ПАЦИЕНТRowChangeEvent(((ПАЦИЕНТRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveПАЦИЕНТRow(ПАЦИЕНТRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DietDBDataSet ds = new DietDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ПАЦИЕНТDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DietReportDataTable : global::System.Data.TypedTableBase<DietReportRow> {
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnProductCount;
            
            private global::System.Data.DataColumn columnPatientName;
            
            private global::System.Data.DataColumn columnPatientSurname;
            
            private global::System.Data.DataColumn columnPatientPatronym;
            
            private global::System.Data.DataColumn columnPatientGender;
            
            private global::System.Data.DataColumn columnPatientHeight;
            
            private global::System.Data.DataColumn columnPatientWeight;
            
            private global::System.Data.DataColumn columnPatientIllness;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DietReportDataTable() {
                this.TableName = "DietReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DietReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected DietReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProductCountColumn {
                get {
                    return this.columnProductCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PatientNameColumn {
                get {
                    return this.columnPatientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PatientSurnameColumn {
                get {
                    return this.columnPatientSurname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PatientPatronymColumn {
                get {
                    return this.columnPatientPatronym;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PatientGenderColumn {
                get {
                    return this.columnPatientGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PatientHeightColumn {
                get {
                    return this.columnPatientHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PatientWeightColumn {
                get {
                    return this.columnPatientWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PatientIllnessColumn {
                get {
                    return this.columnPatientIllness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DietReportRow this[int index] {
                get {
                    return ((DietReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DietReportRowChangeEventHandler DietReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DietReportRowChangeEventHandler DietReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DietReportRowChangeEventHandler DietReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DietReportRowChangeEventHandler DietReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddDietReportRow(DietReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DietReportRow AddDietReportRow(string ProductName, int ProductCount, string PatientName, string PatientSurname, string PatientPatronym, string PatientGender, int PatientHeight, int PatientWeight, string PatientIllness) {
                DietReportRow rowDietReportRow = ((DietReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProductName,
                        ProductCount,
                        PatientName,
                        PatientSurname,
                        PatientPatronym,
                        PatientGender,
                        PatientHeight,
                        PatientWeight,
                        PatientIllness};
                rowDietReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDietReportRow);
                return rowDietReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DietReportDataTable cln = ((DietReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DietReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnProductName = base.Columns["ProductName"];
                this.columnProductCount = base.Columns["ProductCount"];
                this.columnPatientName = base.Columns["PatientName"];
                this.columnPatientSurname = base.Columns["PatientSurname"];
                this.columnPatientPatronym = base.Columns["PatientPatronym"];
                this.columnPatientGender = base.Columns["PatientGender"];
                this.columnPatientHeight = base.Columns["PatientHeight"];
                this.columnPatientWeight = base.Columns["PatientWeight"];
                this.columnPatientIllness = base.Columns["PatientIllness"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnProductCount = new global::System.Data.DataColumn("ProductCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCount);
                this.columnPatientName = new global::System.Data.DataColumn("PatientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientName);
                this.columnPatientSurname = new global::System.Data.DataColumn("PatientSurname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientSurname);
                this.columnPatientPatronym = new global::System.Data.DataColumn("PatientPatronym", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientPatronym);
                this.columnPatientGender = new global::System.Data.DataColumn("PatientGender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientGender);
                this.columnPatientHeight = new global::System.Data.DataColumn("PatientHeight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientHeight);
                this.columnPatientWeight = new global::System.Data.DataColumn("PatientWeight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientWeight);
                this.columnPatientIllness = new global::System.Data.DataColumn("PatientIllness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientIllness);
                this.columnProductName.AllowDBNull = false;
                this.columnProductName.MaxLength = 30;
                this.columnProductCount.AllowDBNull = false;
                this.columnPatientName.AllowDBNull = false;
                this.columnPatientName.MaxLength = 20;
                this.columnPatientSurname.AllowDBNull = false;
                this.columnPatientSurname.MaxLength = 20;
                this.columnPatientPatronym.MaxLength = 20;
                this.columnPatientGender.AllowDBNull = false;
                this.columnPatientGender.MaxLength = 10;
                this.columnPatientHeight.AllowDBNull = false;
                this.columnPatientWeight.AllowDBNull = false;
                this.columnPatientIllness.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DietReportRow NewDietReportRow() {
                return ((DietReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DietReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DietReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DietReportRowChanged != null)) {
                    this.DietReportRowChanged(this, new DietReportRowChangeEvent(((DietReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DietReportRowChanging != null)) {
                    this.DietReportRowChanging(this, new DietReportRowChangeEvent(((DietReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DietReportRowDeleted != null)) {
                    this.DietReportRowDeleted(this, new DietReportRowChangeEvent(((DietReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DietReportRowDeleting != null)) {
                    this.DietReportRowDeleting(this, new DietReportRowChangeEvent(((DietReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveDietReportRow(DietReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DietDBDataSet ds = new DietDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DietReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable : global::System.Data.TypedTableBase<НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow> {
            
            private global::System.Data.DataColumn columnID_набора_параметров_пациента;
            
            private global::System.Data.DataColumn columnРост_пациента;
            
            private global::System.Data.DataColumn columnВес_пациента;
            
            private global::System.Data.DataColumn columnПол_пациента;
            
            private global::System.Data.DataColumn columnЗаболевание_пациента;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable() {
                this.TableName = "НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ID_набора_параметров_пациентаColumn {
                get {
                    return this.columnID_набора_параметров_пациента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Рост_пациентаColumn {
                get {
                    return this.columnРост_пациента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Вес_пациентаColumn {
                get {
                    return this.columnВес_пациента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Пол_пациентаColumn {
                get {
                    return this.columnПол_пациента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Заболевание_пациентаColumn {
                get {
                    return this.columnЗаболевание_пациента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow this[int index] {
                get {
                    return ((НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChangeEventHandler НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChangeEventHandler НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChangeEventHandler НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChangeEventHandler НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow(НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow AddНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow(int Рост_пациента, int Вес_пациента, string Пол_пациента, string Заболевание_пациента) {
                НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow rowНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow = ((НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Рост_пациента,
                        Вес_пациента,
                        Пол_пациента,
                        Заболевание_пациента};
                rowНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow);
                return rowНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow FindByID_набора_параметров_пациента(int ID_набора_параметров_пациента) {
                return ((НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow)(this.Rows.Find(new object[] {
                            ID_набора_параметров_пациента})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable cln = ((НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnID_набора_параметров_пациента = base.Columns["ID_набора_параметров_пациента"];
                this.columnРост_пациента = base.Columns["Рост_пациента"];
                this.columnВес_пациента = base.Columns["Вес_пациента"];
                this.columnПол_пациента = base.Columns["Пол_пациента"];
                this.columnЗаболевание_пациента = base.Columns["Заболевание_пациента"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnID_набора_параметров_пациента = new global::System.Data.DataColumn("ID_набора_параметров_пациента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_набора_параметров_пациента);
                this.columnРост_пациента = new global::System.Data.DataColumn("Рост_пациента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРост_пациента);
                this.columnВес_пациента = new global::System.Data.DataColumn("Вес_пациента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВес_пациента);
                this.columnПол_пациента = new global::System.Data.DataColumn("Пол_пациента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПол_пациента);
                this.columnЗаболевание_пациента = new global::System.Data.DataColumn("Заболевание_пациента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗаболевание_пациента);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_набора_параметров_пациента}, true));
                this.columnID_набора_параметров_пациента.AutoIncrement = true;
                this.columnID_набора_параметров_пациента.AutoIncrementSeed = -1;
                this.columnID_набора_параметров_пациента.AutoIncrementStep = -1;
                this.columnID_набора_параметров_пациента.AllowDBNull = false;
                this.columnID_набора_параметров_пациента.ReadOnly = true;
                this.columnID_набора_параметров_пациента.Unique = true;
                this.columnРост_пациента.AllowDBNull = false;
                this.columnВес_пациента.AllowDBNull = false;
                this.columnПол_пациента.AllowDBNull = false;
                this.columnПол_пациента.MaxLength = 10;
                this.columnЗаболевание_пациента.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow NewНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow() {
                return ((НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChanged != null)) {
                    this.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChanged(this, new НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChangeEvent(((НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChanging != null)) {
                    this.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChanging(this, new НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChangeEvent(((НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowDeleted != null)) {
                    this.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowDeleted(this, new НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChangeEvent(((НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowDeleting != null)) {
                    this.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowDeleting(this, new НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChangeEvent(((НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow(НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DietDBDataSet ds = new DietDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class КАТЕГОРИЯ_ПРОДУКТОВRow : global::System.Data.DataRow {
            
            private КАТЕГОРИЯ_ПРОДУКТОВDataTable tableКАТЕГОРИЯ_ПРОДУКТОВ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal КАТЕГОРИЯ_ПРОДУКТОВRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableКАТЕГОРИЯ_ПРОДУКТОВ = ((КАТЕГОРИЯ_ПРОДУКТОВDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_категории_продуктов {
                get {
                    return ((int)(this[this.tableКАТЕГОРИЯ_ПРОДУКТОВ.ID_категории_продуктовColumn]));
                }
                set {
                    this[this.tableКАТЕГОРИЯ_ПРОДУКТОВ.ID_категории_продуктовColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Название_категории_продуктов {
                get {
                    return ((string)(this[this.tableКАТЕГОРИЯ_ПРОДУКТОВ.Название_категории_продуктовColumn]));
                }
                set {
                    this[this.tableКАТЕГОРИЯ_ПРОДУКТОВ.Название_категории_продуктовColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow[] GetСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRows() {
                if ((this.Table.ChildRelations["КАТЕГОРИЯ_ПРОДУКТОВ_Обладает_СОВМЕСТИМОСТЬ_КАТЕГОРИЙ"] == null)) {
                    return new СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow[0];
                }
                else {
                    return ((СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow[])(base.GetChildRows(this.Table.ChildRelations["КАТЕГОРИЯ_ПРОДУКТОВ_Обладает_СОВМЕСТИМОСТЬ_КАТЕГОРИЙ"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПРОДУКТRow[] GetПРОДУКТRows() {
                if ((this.Table.ChildRelations["КАТЕГОРИЯ_ПРОДУКТОВ_Включает_в_себя_ПРОДУКТ"] == null)) {
                    return new ПРОДУКТRow[0];
                }
                else {
                    return ((ПРОДУКТRow[])(base.GetChildRows(this.Table.ChildRelations["КАТЕГОРИЯ_ПРОДУКТОВ_Включает_в_себя_ПРОДУКТ"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ЭЛЕМЕНТ_РАЦИОНАRow : global::System.Data.DataRow {
            
            private ЭЛЕМЕНТ_РАЦИОНАDataTable tableЭЛЕМЕНТ_РАЦИОНА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ЭЛЕМЕНТ_РАЦИОНАRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableЭЛЕМЕНТ_РАЦИОНА = ((ЭЛЕМЕНТ_РАЦИОНАDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_продукта {
                get {
                    return ((int)(this[this.tableЭЛЕМЕНТ_РАЦИОНА.ID_продуктаColumn]));
                }
                set {
                    this[this.tableЭЛЕМЕНТ_РАЦИОНА.ID_продуктаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Количество_продукта {
                get {
                    return ((int)(this[this.tableЭЛЕМЕНТ_РАЦИОНА.Количество_продуктаColumn]));
                }
                set {
                    this[this.tableЭЛЕМЕНТ_РАЦИОНА.Количество_продуктаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_элемента_рациона {
                get {
                    return ((int)(this[this.tableЭЛЕМЕНТ_РАЦИОНА.ID_элемента_рационаColumn]));
                }
                set {
                    this[this.tableЭЛЕМЕНТ_РАЦИОНА.ID_элемента_рационаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_рациона {
                get {
                    return ((int)(this[this.tableЭЛЕМЕНТ_РАЦИОНА.ID_рационаColumn]));
                }
                set {
                    this[this.tableЭЛЕМЕНТ_РАЦИОНА.ID_рационаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПРОДУКТRow ПРОДУКТRow {
                get {
                    return ((ПРОДУКТRow)(this.GetParentRow(this.Table.ParentRelations["ПРОДУКТ_Является_частью_ЭЛЕМЕНТ_РАЦИОНА"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ПРОДУКТ_Является_частью_ЭЛЕМЕНТ_РАЦИОНА"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РАЦИОНRow РАЦИОНRow {
                get {
                    return ((РАЦИОНRow)(this.GetParentRow(this.Table.ParentRelations["РАЦИОН_Состоит_из_ЭЛЕМЕНТ_РАЦИОНА"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["РАЦИОН_Состоит_из_ЭЛЕМЕНТ_РАЦИОНА"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow : global::System.Data.DataRow {
            
            private СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ = ((СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_набора_параметров_пациента {
                get {
                    return ((int)(this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.ID_набора_параметров_пациентаColumn]));
                }
                set {
                    this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.ID_набора_параметров_пациентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Значение_суточной_нормы_белков {
                get {
                    try {
                        return ((decimal)(this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_белковColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Значение_суточной_нормы_белков\' в таблице \'СУТОЧНАЯ_НОРМА_В" +
                                "ЕЩЕСТВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_белковColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Значение_суточной_нормы_жиров {
                get {
                    try {
                        return ((decimal)(this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_жировColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Значение_суточной_нормы_жиров\' в таблице \'СУТОЧНАЯ_НОРМА_ВЕ" +
                                "ЩЕСТВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_жировColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Значение_суточной_нормы_углеводов {
                get {
                    try {
                        return ((decimal)(this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_углеводовColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Значение_суточной_нормы_углеводов\' в таблице \'СУТОЧНАЯ_НОРМ" +
                                "А_ВЕЩЕСТВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_углеводовColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Значение_суточной_нормы_витамина_A {
                get {
                    try {
                        return ((decimal)(this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_витамина_AColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Значение_суточной_нормы_витамина_A\' в таблице \'СУТОЧНАЯ_НОР" +
                                "МА_ВЕЩЕСТВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_витамина_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Значение_суточной_нормы_витамина_B1 {
                get {
                    try {
                        return ((decimal)(this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_витамина_B1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Значение_суточной_нормы_витамина_B1\' в таблице \'СУТОЧНАЯ_НО" +
                                "РМА_ВЕЩЕСТВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_витамина_B1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Значение_суточной_нормы_витамина_C {
                get {
                    try {
                        return ((decimal)(this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_витамина_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Значение_суточной_нормы_витамина_C\' в таблице \'СУТОЧНАЯ_НОР" +
                                "МА_ВЕЩЕСТВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_витамина_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Значение_суточной_нормы_калорий {
                get {
                    try {
                        return ((int)(this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_калорийColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Значение_суточной_нормы_калорий\' в таблице \'СУТОЧНАЯ_НОРМА_" +
                                "ВЕЩЕСТВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_калорийColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Значение_суточной_нормы_клетчатки {
                get {
                    try {
                        return ((decimal)(this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_клетчаткиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Значение_суточной_нормы_клетчатки\' в таблице \'СУТОЧНАЯ_НОРМ" +
                                "А_ВЕЩЕСТВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_клетчаткиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow {
                get {
                    return ((НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow)(this.GetParentRow(this.Table.ParentRelations["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Связан_с_СУТОЧНАЯ_НОРМА_ВЕЩЕСТВА"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Связан_с_СУТОЧНАЯ_НОРМА_ВЕЩЕСТВА"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsЗначение_суточной_нормы_белковNull() {
                return this.IsNull(this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_белковColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetЗначение_суточной_нормы_белковNull() {
                this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_белковColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsЗначение_суточной_нормы_жировNull() {
                return this.IsNull(this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_жировColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetЗначение_суточной_нормы_жировNull() {
                this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_жировColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsЗначение_суточной_нормы_углеводовNull() {
                return this.IsNull(this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_углеводовColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetЗначение_суточной_нормы_углеводовNull() {
                this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_углеводовColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsЗначение_суточной_нормы_витамина_ANull() {
                return this.IsNull(this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_витамина_AColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetЗначение_суточной_нормы_витамина_ANull() {
                this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_витамина_AColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsЗначение_суточной_нормы_витамина_B1Null() {
                return this.IsNull(this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_витамина_B1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetЗначение_суточной_нормы_витамина_B1Null() {
                this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_витамина_B1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsЗначение_суточной_нормы_витамина_CNull() {
                return this.IsNull(this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_витамина_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetЗначение_суточной_нормы_витамина_CNull() {
                this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_витамина_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsЗначение_суточной_нормы_калорийNull() {
                return this.IsNull(this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_калорийColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetЗначение_суточной_нормы_калорийNull() {
                this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_калорийColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsЗначение_суточной_нормы_клетчаткиNull() {
                return this.IsNull(this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_клетчаткиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetЗначение_суточной_нормы_клетчаткиNull() {
                this[this.tableСУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Значение_суточной_нормы_клетчаткиColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow : global::System.Data.DataRow {
            
            private СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ = ((СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_категории_продуктов {
                get {
                    return ((int)(this[this.tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ.ID_категории_продуктовColumn]));
                }
                set {
                    this[this.tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ.ID_категории_продуктовColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_совместимой_категории_продуктов {
                get {
                    try {
                        return ((int)(this[this.tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ.ID_совместимой_категории_продуктовColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_совместимой_категории_продуктов\' в таблице \'СОВМЕСТИМОСТ" +
                                "Ь_КАТЕГОРИЙ_ПРОДУКТОВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ.ID_совместимой_категории_продуктовColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КАТЕГОРИЯ_ПРОДУКТОВRow КАТЕГОРИЯ_ПРОДУКТОВRow {
                get {
                    return ((КАТЕГОРИЯ_ПРОДУКТОВRow)(this.GetParentRow(this.Table.ParentRelations["КАТЕГОРИЯ_ПРОДУКТОВ_Обладает_СОВМЕСТИМОСТЬ_КАТЕГОРИЙ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["КАТЕГОРИЯ_ПРОДУКТОВ_Обладает_СОВМЕСТИМОСТЬ_КАТЕГОРИЙ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsID_совместимой_категории_продуктовNull() {
                return this.IsNull(this.tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ.ID_совместимой_категории_продуктовColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetID_совместимой_категории_продуктовNull() {
                this[this.tableСОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ.ID_совместимой_категории_продуктовColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class РАЦИОНRow : global::System.Data.DataRow {
            
            private РАЦИОНDataTable tableРАЦИОН;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal РАЦИОНRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableРАЦИОН = ((РАЦИОНDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_рациона {
                get {
                    return ((int)(this[this.tableРАЦИОН.ID_рационаColumn]));
                }
                set {
                    this[this.tableРАЦИОН.ID_рационаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_набора_параметров_пациента {
                get {
                    return ((int)(this[this.tableРАЦИОН.ID_набора_параметров_пациентаColumn]));
                }
                set {
                    this[this.tableРАЦИОН.ID_набора_параметров_пациентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Доступный_бюджет {
                get {
                    return ((int)(this[this.tableРАЦИОН.Доступный_бюджетColumn]));
                }
                set {
                    this[this.tableРАЦИОН.Доступный_бюджетColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_пациента {
                get {
                    return ((int)(this[this.tableРАЦИОН.ID_пациентаColumn]));
                }
                set {
                    this[this.tableРАЦИОН.ID_пациентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПАЦИЕНТRow ПАЦИЕНТRow {
                get {
                    return ((ПАЦИЕНТRow)(this.GetParentRow(this.Table.ParentRelations["ПАЦИЕНТ_Назначается_РАЦИОН"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ПАЦИЕНТ_Назначается_РАЦИОН"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow {
                get {
                    return ((НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow)(this.GetParentRow(this.Table.ParentRelations["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Является_частью_РАЦИОН"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Является_частью_РАЦИОН"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЭЛЕМЕНТ_РАЦИОНАRow[] GetЭЛЕМЕНТ_РАЦИОНАRows() {
                if ((this.Table.ChildRelations["РАЦИОН_Состоит_из_ЭЛЕМЕНТ_РАЦИОНА"] == null)) {
                    return new ЭЛЕМЕНТ_РАЦИОНАRow[0];
                }
                else {
                    return ((ЭЛЕМЕНТ_РАЦИОНАRow[])(base.GetChildRows(this.Table.ChildRelations["РАЦИОН_Состоит_из_ЭЛЕМЕНТ_РАЦИОНА"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ПРОДУКТRow : global::System.Data.DataRow {
            
            private ПРОДУКТDataTable tableПРОДУКТ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ПРОДУКТRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПРОДУКТ = ((ПРОДУКТDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_продукта {
                get {
                    return ((int)(this[this.tableПРОДУКТ.ID_продуктаColumn]));
                }
                set {
                    this[this.tableПРОДУКТ.ID_продуктаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Название_продукта {
                get {
                    return ((string)(this[this.tableПРОДУКТ.Название_продуктаColumn]));
                }
                set {
                    this[this.tableПРОДУКТ.Название_продуктаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Содержание_белков_на_100_г_продукта {
                get {
                    return ((decimal)(this[this.tableПРОДУКТ.Содержание_белков_на_100_г_продуктаColumn]));
                }
                set {
                    this[this.tableПРОДУКТ.Содержание_белков_на_100_г_продуктаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Содержание_жиров_на_100_г_продукта {
                get {
                    return ((decimal)(this[this.tableПРОДУКТ.Содержание_жиров_на_100_г_продуктаColumn]));
                }
                set {
                    this[this.tableПРОДУКТ.Содержание_жиров_на_100_г_продуктаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Содержание_углеводов_на_100_г_продукта {
                get {
                    return ((decimal)(this[this.tableПРОДУКТ.Содержание_углеводов_на_100_г_продуктаColumn]));
                }
                set {
                    this[this.tableПРОДУКТ.Содержание_углеводов_на_100_г_продуктаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Содержание_витамина_A_на_100_г_продукта {
                get {
                    return ((decimal)(this[this.tableПРОДУКТ.Содержание_витамина_A_на_100_г_продуктаColumn]));
                }
                set {
                    this[this.tableПРОДУКТ.Содержание_витамина_A_на_100_г_продуктаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Содержание_витамина_B1_на_100_г_продукта {
                get {
                    return ((decimal)(this[this.tableПРОДУКТ.Содержание_витамина_B1_на_100_г_продуктаColumn]));
                }
                set {
                    this[this.tableПРОДУКТ.Содержание_витамина_B1_на_100_г_продуктаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Содержание_витамина_C_на_100_г_продукта {
                get {
                    return ((decimal)(this[this.tableПРОДУКТ.Содержание_витамина_C_на_100_г_продуктаColumn]));
                }
                set {
                    this[this.tableПРОДУКТ.Содержание_витамина_C_на_100_г_продуктаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Калорийность_на_100_г_продукта {
                get {
                    return ((int)(this[this.tableПРОДУКТ.Калорийность_на_100_г_продуктаColumn]));
                }
                set {
                    this[this.tableПРОДУКТ.Калорийность_на_100_г_продуктаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_категории_продуктов {
                get {
                    return ((int)(this[this.tableПРОДУКТ.ID_категории_продуктовColumn]));
                }
                set {
                    this[this.tableПРОДУКТ.ID_категории_продуктовColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Стоимость_100_г_продукта {
                get {
                    return ((decimal)(this[this.tableПРОДУКТ.Стоимость_100_г_продуктаColumn]));
                }
                set {
                    this[this.tableПРОДУКТ.Стоимость_100_г_продуктаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal Содержание_клетчатки_на_100_г_продукта {
                get {
                    return ((decimal)(this[this.tableПРОДУКТ.Содержание_клетчатки_на_100_г_продуктаColumn]));
                }
                set {
                    this[this.tableПРОДУКТ.Содержание_клетчатки_на_100_г_продуктаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte Запрет_при_гастрите {
                get {
                    return ((byte)(this[this.tableПРОДУКТ.Запрет_при_гастритеColumn]));
                }
                set {
                    this[this.tableПРОДУКТ.Запрет_при_гастритеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte Запрет_при_диабете {
                get {
                    return ((byte)(this[this.tableПРОДУКТ.Запрет_при_диабетеColumn]));
                }
                set {
                    this[this.tableПРОДУКТ.Запрет_при_диабетеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КАТЕГОРИЯ_ПРОДУКТОВRow КАТЕГОРИЯ_ПРОДУКТОВRow {
                get {
                    return ((КАТЕГОРИЯ_ПРОДУКТОВRow)(this.GetParentRow(this.Table.ParentRelations["КАТЕГОРИЯ_ПРОДУКТОВ_Включает_в_себя_ПРОДУКТ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["КАТЕГОРИЯ_ПРОДУКТОВ_Включает_в_себя_ПРОДУКТ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЭЛЕМЕНТ_РАЦИОНАRow[] GetЭЛЕМЕНТ_РАЦИОНАRows() {
                if ((this.Table.ChildRelations["ПРОДУКТ_Является_частью_ЭЛЕМЕНТ_РАЦИОНА"] == null)) {
                    return new ЭЛЕМЕНТ_РАЦИОНАRow[0];
                }
                else {
                    return ((ЭЛЕМЕНТ_РАЦИОНАRow[])(base.GetChildRows(this.Table.ChildRelations["ПРОДУКТ_Является_частью_ЭЛЕМЕНТ_РАЦИОНА"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ПАЦИЕНТRow : global::System.Data.DataRow {
            
            private ПАЦИЕНТDataTable tableПАЦИЕНТ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ПАЦИЕНТRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПАЦИЕНТ = ((ПАЦИЕНТDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_набора_параметров_пациента {
                get {
                    return ((int)(this[this.tableПАЦИЕНТ.ID_набора_параметров_пациентаColumn]));
                }
                set {
                    this[this.tableПАЦИЕНТ.ID_набора_параметров_пациентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_пациента {
                get {
                    return ((int)(this[this.tableПАЦИЕНТ.ID_пациентаColumn]));
                }
                set {
                    this[this.tableПАЦИЕНТ.ID_пациентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Фамилия_пациента {
                get {
                    return ((string)(this[this.tableПАЦИЕНТ.Фамилия_пациентаColumn]));
                }
                set {
                    this[this.tableПАЦИЕНТ.Фамилия_пациентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Имя_пациента {
                get {
                    return ((string)(this[this.tableПАЦИЕНТ.Имя_пациентаColumn]));
                }
                set {
                    this[this.tableПАЦИЕНТ.Имя_пациентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Отчество_пациента {
                get {
                    try {
                        return ((string)(this[this.tableПАЦИЕНТ.Отчество_пациентаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Отчество_пациента\' в таблице \'ПАЦИЕНТ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПАЦИЕНТ.Отчество_пациентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow {
                get {
                    return ((НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow)(this.GetParentRow(this.Table.ParentRelations["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Описывает_ПАЦИЕНТ"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Описывает_ПАЦИЕНТ"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОтчество_пациентаNull() {
                return this.IsNull(this.tableПАЦИЕНТ.Отчество_пациентаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОтчество_пациентаNull() {
                this[this.tableПАЦИЕНТ.Отчество_пациентаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РАЦИОНRow[] GetРАЦИОНRows() {
                if ((this.Table.ChildRelations["ПАЦИЕНТ_Назначается_РАЦИОН"] == null)) {
                    return new РАЦИОНRow[0];
                }
                else {
                    return ((РАЦИОНRow[])(base.GetChildRows(this.Table.ChildRelations["ПАЦИЕНТ_Назначается_РАЦИОН"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DietReportRow : global::System.Data.DataRow {
            
            private DietReportDataTable tableDietReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DietReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDietReport = ((DietReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProductName {
                get {
                    return ((string)(this[this.tableDietReport.ProductNameColumn]));
                }
                set {
                    this[this.tableDietReport.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ProductCount {
                get {
                    return ((int)(this[this.tableDietReport.ProductCountColumn]));
                }
                set {
                    this[this.tableDietReport.ProductCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PatientName {
                get {
                    return ((string)(this[this.tableDietReport.PatientNameColumn]));
                }
                set {
                    this[this.tableDietReport.PatientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PatientSurname {
                get {
                    return ((string)(this[this.tableDietReport.PatientSurnameColumn]));
                }
                set {
                    this[this.tableDietReport.PatientSurnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PatientPatronym {
                get {
                    try {
                        return ((string)(this[this.tableDietReport.PatientPatronymColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PatientPatronym\' в таблице \'DietReport\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDietReport.PatientPatronymColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PatientGender {
                get {
                    return ((string)(this[this.tableDietReport.PatientGenderColumn]));
                }
                set {
                    this[this.tableDietReport.PatientGenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PatientHeight {
                get {
                    return ((int)(this[this.tableDietReport.PatientHeightColumn]));
                }
                set {
                    this[this.tableDietReport.PatientHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PatientWeight {
                get {
                    return ((int)(this[this.tableDietReport.PatientWeightColumn]));
                }
                set {
                    this[this.tableDietReport.PatientWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PatientIllness {
                get {
                    try {
                        return ((string)(this[this.tableDietReport.PatientIllnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PatientIllness\' в таблице \'DietReport\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDietReport.PatientIllnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPatientPatronymNull() {
                return this.IsNull(this.tableDietReport.PatientPatronymColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPatientPatronymNull() {
                this[this.tableDietReport.PatientPatronymColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPatientIllnessNull() {
                return this.IsNull(this.tableDietReport.PatientIllnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPatientIllnessNull() {
                this[this.tableDietReport.PatientIllnessColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow : global::System.Data.DataRow {
            
            private НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА = ((НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID_набора_параметров_пациента {
                get {
                    return ((int)(this[this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.ID_набора_параметров_пациентаColumn]));
                }
                set {
                    this[this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.ID_набора_параметров_пациентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Рост_пациента {
                get {
                    return ((int)(this[this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.Рост_пациентаColumn]));
                }
                set {
                    this[this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.Рост_пациентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Вес_пациента {
                get {
                    return ((int)(this[this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.Вес_пациентаColumn]));
                }
                set {
                    this[this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.Вес_пациентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Пол_пациента {
                get {
                    return ((string)(this[this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.Пол_пациентаColumn]));
                }
                set {
                    this[this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.Пол_пациентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Заболевание_пациента {
                get {
                    try {
                        return ((string)(this[this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.Заболевание_пациентаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Заболевание_пациента\' в таблице \'НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА\'" +
                                " равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.Заболевание_пациентаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsЗаболевание_пациентаNull() {
                return this.IsNull(this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.Заболевание_пациентаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetЗаболевание_пациентаNull() {
                this[this.tableНАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.Заболевание_пациентаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow[] GetСУТОЧНАЯ_НОРМА_ВЕЩЕСТВRows() {
                if ((this.Table.ChildRelations["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Связан_с_СУТОЧНАЯ_НОРМА_ВЕЩЕСТВА"] == null)) {
                    return new СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow[0];
                }
                else {
                    return ((СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow[])(base.GetChildRows(this.Table.ChildRelations["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Связан_с_СУТОЧНАЯ_НОРМА_ВЕЩЕСТВА"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РАЦИОНRow[] GetРАЦИОНRows() {
                if ((this.Table.ChildRelations["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Является_частью_РАЦИОН"] == null)) {
                    return new РАЦИОНRow[0];
                }
                else {
                    return ((РАЦИОНRow[])(base.GetChildRows(this.Table.ChildRelations["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Является_частью_РАЦИОН"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПАЦИЕНТRow[] GetПАЦИЕНТRows() {
                if ((this.Table.ChildRelations["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Описывает_ПАЦИЕНТ"] == null)) {
                    return new ПАЦИЕНТRow[0];
                }
                else {
                    return ((ПАЦИЕНТRow[])(base.GetChildRows(this.Table.ChildRelations["НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА_Описывает_ПАЦИЕНТ"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class КАТЕГОРИЯ_ПРОДУКТОВRowChangeEvent : global::System.EventArgs {
            
            private КАТЕГОРИЯ_ПРОДУКТОВRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КАТЕГОРИЯ_ПРОДУКТОВRowChangeEvent(КАТЕГОРИЯ_ПРОДУКТОВRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public КАТЕГОРИЯ_ПРОДУКТОВRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ЭЛЕМЕНТ_РАЦИОНАRowChangeEvent : global::System.EventArgs {
            
            private ЭЛЕМЕНТ_РАЦИОНАRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЭЛЕМЕНТ_РАЦИОНАRowChangeEvent(ЭЛЕМЕНТ_РАЦИОНАRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЭЛЕМЕНТ_РАЦИОНАRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChangeEvent : global::System.EventArgs {
            
            private СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRowChangeEvent(СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СУТОЧНАЯ_НОРМА_ВЕЩЕСТВRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChangeEvent : global::System.EventArgs {
            
            private СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRowChangeEvent(СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class РАЦИОНRowChangeEvent : global::System.EventArgs {
            
            private РАЦИОНRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РАЦИОНRowChangeEvent(РАЦИОНRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РАЦИОНRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ПРОДУКТRowChangeEvent : global::System.EventArgs {
            
            private ПРОДУКТRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПРОДУКТRowChangeEvent(ПРОДУКТRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПРОДУКТRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ПАЦИЕНТRowChangeEvent : global::System.EventArgs {
            
            private ПАЦИЕНТRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПАЦИЕНТRowChangeEvent(ПАЦИЕНТRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПАЦИЕНТRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class DietReportRowChangeEvent : global::System.EventArgs {
            
            private DietReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DietReportRowChangeEvent(DietReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DietReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChangeEvent : global::System.EventArgs {
            
            private НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRowChangeEvent(НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DSS_Diet.DietDBDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class КАТЕГОРИЯ_ПРОДУКТОВTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public КАТЕГОРИЯ_ПРОДУКТОВTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "КАТЕГОРИЯ_ПРОДУКТОВ";
            tableMapping.ColumnMappings.Add("ID_категории_продуктов", "ID_категории_продуктов");
            tableMapping.ColumnMappings.Add("Название_категории_продуктов", "Название_категории_продуктов");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[КАТЕГОРИЯ_ПРОДУКТОВ] WHERE (([ID_категории_продуктов] = @Origi" +
                "nal_ID_категории_продуктов) AND ([Название_категории_продуктов] = @Original_Назв" +
                "ание_категории_продуктов))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_категории_продуктов", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_категории_продуктов", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Название_категории_продуктов", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_категории_продуктов", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[КАТЕГОРИЯ_ПРОДУКТОВ] ([Название_категории_продуктов]) VALUES (" +
                "@Название_категории_продуктов);\r\nSELECT ID_категории_продуктов, Название_категор" +
                "ии_продуктов FROM КАТЕГОРИЯ_ПРОДУКТОВ WHERE (ID_категории_продуктов = SCOPE_IDEN" +
                "TITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Название_категории_продуктов", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_категории_продуктов", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[КАТЕГОРИЯ_ПРОДУКТОВ] SET [Название_категории_продуктов] = @Название_категории_продуктов WHERE (([ID_категории_продуктов] = @Original_ID_категории_продуктов) AND ([Название_категории_продуктов] = @Original_Название_категории_продуктов));
SELECT ID_категории_продуктов, Название_категории_продуктов FROM КАТЕГОРИЯ_ПРОДУКТОВ WHERE (ID_категории_продуктов = @ID_категории_продуктов)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Название_категории_продуктов", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_категории_продуктов", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_категории_продуктов", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_категории_продуктов", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Название_категории_продуктов", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_категории_продуктов", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_категории_продуктов", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_категории_продуктов", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DESKTOP-0E3AC9U\\SQLEXPRESS;Initial Catalog=DietDB;Integrated Security" +
                "=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_категории_продуктов, Название_категории_продуктов FROM dbo.КАТЕГОРИЯ_ПР" +
                "ОДУКТОВ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DietDBDataSet.КАТЕГОРИЯ_ПРОДУКТОВDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DietDBDataSet.КАТЕГОРИЯ_ПРОДУКТОВDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DietDBDataSet.КАТЕГОРИЯ_ПРОДУКТОВDataTable dataTable = new DietDBDataSet.КАТЕГОРИЯ_ПРОДУКТОВDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet.КАТЕГОРИЯ_ПРОДУКТОВDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "КАТЕГОРИЯ_ПРОДУКТОВ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_категории_продуктов, string Original_Название_категории_продуктов) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_категории_продуктов));
            if ((Original_Название_категории_продуктов == null)) {
                throw new global::System.ArgumentNullException("Original_Название_категории_продуктов");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Название_категории_продуктов));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Название_категории_продуктов) {
            if ((Название_категории_продуктов == null)) {
                throw new global::System.ArgumentNullException("Название_категории_продуктов");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Название_категории_продуктов));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Название_категории_продуктов, int Original_ID_категории_продуктов, string Original_Название_категории_продуктов, int ID_категории_продуктов) {
            if ((Название_категории_продуктов == null)) {
                throw new global::System.ArgumentNullException("Название_категории_продуктов");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Название_категории_продуктов));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_ID_категории_продуктов));
            if ((Original_Название_категории_продуктов == null)) {
                throw new global::System.ArgumentNullException("Original_Название_категории_продуктов");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Название_категории_продуктов));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_категории_продуктов));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Название_категории_продуктов, int Original_ID_категории_продуктов, string Original_Название_категории_продуктов) {
            return this.Update(Название_категории_продуктов, Original_ID_категории_продуктов, Original_Название_категории_продуктов, Original_ID_категории_продуктов);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ЭЛЕМЕНТ_РАЦИОНАTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ЭЛЕМЕНТ_РАЦИОНАTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ЭЛЕМЕНТ_РАЦИОНА";
            tableMapping.ColumnMappings.Add("ID_продукта", "ID_продукта");
            tableMapping.ColumnMappings.Add("Количество_продукта", "Количество_продукта");
            tableMapping.ColumnMappings.Add("ID_элемента_рациона", "ID_элемента_рациона");
            tableMapping.ColumnMappings.Add("ID_рациона", "ID_рациона");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ЭЛЕМЕНТ_РАЦИОНА] WHERE (([ID_продукта] = @Original_ID_продукта" +
                ") AND ([Количество_продукта] = @Original_Количество_продукта) AND ([ID_элемента_" +
                "рациона] = @Original_ID_элемента_рациона) AND ([ID_рациона] = @Original_ID_рацио" +
                "на))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_продукта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество_продукта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_элемента_рациона", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_элемента_рациона", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_рациона", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_рациона", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ЭЛЕМЕНТ_РАЦИОНА] ([ID_продукта], [Количество_продукта], [ID_рациона]) VALUES (@ID_продукта, @Количество_продукта, @ID_рациона);
SELECT ID_продукта, Количество_продукта, ID_элемента_рациона, ID_рациона FROM ЭЛЕМЕНТ_РАЦИОНА WHERE (ID_рациона = @ID_рациона) AND (ID_элемента_рациона = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_продукта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество_продукта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_рациона", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_рациона", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ЭЛЕМЕНТ_РАЦИОНА] SET [ID_продукта] = @ID_продукта, [Количество_продукта] = @Количество_продукта, [ID_рациона] = @ID_рациона WHERE (([ID_продукта] = @Original_ID_продукта) AND ([Количество_продукта] = @Original_Количество_продукта) AND ([ID_элемента_рациона] = @Original_ID_элемента_рациона) AND ([ID_рациона] = @Original_ID_рациона));
SELECT ID_продукта, Количество_продукта, ID_элемента_рациона, ID_рациона FROM ЭЛЕМЕНТ_РАЦИОНА WHERE (ID_рациона = @ID_рациона) AND (ID_элемента_рациона = @ID_элемента_рациона)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_продукта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Количество_продукта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_рациона", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_рациона", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_продукта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Количество_продукта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Количество_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_элемента_рациона", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_элемента_рациона", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_рациона", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_рациона", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_элемента_рациона", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_элемента_рациона", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DESKTOP-0E3AC9U\\SQLEXPRESS;Initial Catalog=DietDB;Integrated Security" +
                "=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_продукта, Количество_продукта, ID_элемента_рациона, ID_рациона FROM dbo" +
                ".ЭЛЕМЕНТ_РАЦИОНА";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DietDBDataSet.ЭЛЕМЕНТ_РАЦИОНАDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DietDBDataSet.ЭЛЕМЕНТ_РАЦИОНАDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DietDBDataSet.ЭЛЕМЕНТ_РАЦИОНАDataTable dataTable = new DietDBDataSet.ЭЛЕМЕНТ_РАЦИОНАDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet.ЭЛЕМЕНТ_РАЦИОНАDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ЭЛЕМЕНТ_РАЦИОНА");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_продукта, int Original_Количество_продукта, int Original_ID_элемента_рациона, int Original_ID_рациона) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_продукта));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Количество_продукта));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_элемента_рациона));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_ID_рациона));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_продукта, int Количество_продукта, int ID_рациона) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_продукта));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Количество_продукта));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ID_рациона));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_продукта, int Количество_продукта, int ID_рациона, int Original_ID_продукта, int Original_Количество_продукта, int Original_ID_элемента_рациона, int Original_ID_рациона, int ID_элемента_рациона) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_продукта));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Количество_продукта));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ID_рациона));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_продукта));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Количество_продукта));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_элемента_рациона));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_рациона));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID_элемента_рациона));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_продукта, int Количество_продукта, int Original_ID_продукта, int Original_Количество_продукта, int Original_ID_элемента_рациона, int Original_ID_рациона) {
            return this.Update(ID_продукта, Количество_продукта, Original_ID_рациона, Original_ID_продукта, Original_Количество_продукта, Original_ID_элемента_рациона, Original_ID_рациона, Original_ID_элемента_рациона);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class СУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public СУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ";
            tableMapping.ColumnMappings.Add("ID_набора_параметров_пациента", "ID_набора_параметров_пациента");
            tableMapping.ColumnMappings.Add("Значение_суточной_нормы_белков", "Значение_суточной_нормы_белков");
            tableMapping.ColumnMappings.Add("Значение_суточной_нормы_жиров", "Значение_суточной_нормы_жиров");
            tableMapping.ColumnMappings.Add("Значение_суточной_нормы_углеводов", "Значение_суточной_нормы_углеводов");
            tableMapping.ColumnMappings.Add("Значение_суточной_нормы_витамина_A", "Значение_суточной_нормы_витамина_A");
            tableMapping.ColumnMappings.Add("Значение_суточной_нормы_витамина_B1", "Значение_суточной_нормы_витамина_B1");
            tableMapping.ColumnMappings.Add("Значение_суточной_нормы_витамина_C", "Значение_суточной_нормы_витамина_C");
            tableMapping.ColumnMappings.Add("Значение_суточной_нормы_калорий", "Значение_суточной_нормы_калорий");
            tableMapping.ColumnMappings.Add("Значение_суточной_нормы_клетчатки", "Значение_суточной_нормы_клетчатки");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ] WHERE (([ID_набора_параметров_пациента" +
                "] = @Original_ID_набора_параметров_пациента) AND ((@IsNull_Значение_суточной_нор" +
                "мы_белков = 1 AND [Значение_суточной_нормы_белков] IS NULL) OR ([Значение_суточн" +
                "ой_нормы_белков] = @Original_Значение_суточной_нормы_белков)) AND ((@IsNull_Знач" +
                "ение_суточной_нормы_жиров = 1 AND [Значение_суточной_нормы_жиров] IS NULL) OR ([" +
                "Значение_суточной_нормы_жиров] = @Original_Значение_суточной_нормы_жиров)) AND (" +
                "(@IsNull_Значение_суточной_нормы_углеводов = 1 AND [Значение_суточной_нормы_угле" +
                "водов] IS NULL) OR ([Значение_суточной_нормы_углеводов] = @Original_Значение_сут" +
                "очной_нормы_углеводов)) AND ((@IsNull_Значение_суточной_нормы_витамина_A = 1 AND" +
                " [Значение_суточной_нормы_витамина_A] IS NULL) OR ([Значение_суточной_нормы_вита" +
                "мина_A] = @Original_Значение_суточной_нормы_витамина_A)) AND ((@IsNull_Значение_" +
                "суточной_нормы_витамина_B1 = 1 AND [Значение_суточной_нормы_витамина_B1] IS NULL" +
                ") OR ([Значение_суточной_нормы_витамина_B1] = @Original_Значение_суточной_нормы_" +
                "витамина_B1)) AND ((@IsNull_Значение_суточной_нормы_витамина_C = 1 AND [Значение" +
                "_суточной_нормы_витамина_C] IS NULL) OR ([Значение_суточной_нормы_витамина_C] = " +
                "@Original_Значение_суточной_нормы_витамина_C)) AND ((@IsNull_Значение_суточной_н" +
                "ормы_калорий = 1 AND [Значение_суточной_нормы_калорий] IS NULL) OR ([Значение_су" +
                "точной_нормы_калорий] = @Original_Значение_суточной_нормы_калорий)) AND ((@IsNul" +
                "l_Значение_суточной_нормы_клетчатки = 1 AND [Значение_суточной_нормы_клетчатки] " +
                "IS NULL) OR ([Значение_суточной_нормы_клетчатки] = @Original_Значение_суточной_н" +
                "ормы_клетчатки)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_набора_параметров_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_набора_параметров_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_белков", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_белков", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_белков", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_белков", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_жиров", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_жиров", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_жиров", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_жиров", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_углеводов", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_углеводов", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_углеводов", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_углеводов", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_витамина_A", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_витамина_A", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_витамина_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 3, "Значение_суточной_нормы_витамина_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_витамина_B1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_витамина_B1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_витамина_B1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_витамина_B1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_витамина_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_витамина_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_витамина_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_витамина_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_калорий", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_калорий", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_калорий", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_калорий", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_клетчатки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_клетчатки", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_клетчатки", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_клетчатки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ] ([Значение_суточной_нормы_белков], [Значение_суточной_нормы_жиров], [Значение_суточной_нормы_углеводов], [Значение_суточной_нормы_витамина_A], [Значение_суточной_нормы_витамина_B1], [Значение_суточной_нормы_витамина_C], [Значение_суточной_нормы_калорий], [Значение_суточной_нормы_клетчатки]) VALUES (@Значение_суточной_нормы_белков, @Значение_суточной_нормы_жиров, @Значение_суточной_нормы_углеводов, @Значение_суточной_нормы_витамина_A, @Значение_суточной_нормы_витамина_B1, @Значение_суточной_нормы_витамина_C, @Значение_суточной_нормы_калорий, @Значение_суточной_нормы_клетчатки);
SELECT ID_набора_параметров_пациента, Значение_суточной_нормы_белков, Значение_суточной_нормы_жиров, Значение_суточной_нормы_углеводов, Значение_суточной_нормы_витамина_A, Значение_суточной_нормы_витамина_B1, Значение_суточной_нормы_витамина_C, Значение_суточной_нормы_калорий, Значение_суточной_нормы_клетчатки FROM СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ WHERE (ID_набора_параметров_пациента = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_белков", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_белков", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_жиров", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_жиров", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_углеводов", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_углеводов", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_витамина_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 3, "Значение_суточной_нормы_витамина_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_витамина_B1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_витамина_B1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_витамина_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_витамина_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_калорий", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_калорий", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_клетчатки", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_клетчатки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ] SET [Значение_суточной_нормы_белков] = @Зна" +
                "чение_суточной_нормы_белков, [Значение_суточной_нормы_жиров] = @Значение_суточно" +
                "й_нормы_жиров, [Значение_суточной_нормы_углеводов] = @Значение_суточной_нормы_уг" +
                "леводов, [Значение_суточной_нормы_витамина_A] = @Значение_суточной_нормы_витамин" +
                "а_A, [Значение_суточной_нормы_витамина_B1] = @Значение_суточной_нормы_витамина_B" +
                "1, [Значение_суточной_нормы_витамина_C] = @Значение_суточной_нормы_витамина_C, [" +
                "Значение_суточной_нормы_калорий] = @Значение_суточной_нормы_калорий, [Значение_с" +
                "уточной_нормы_клетчатки] = @Значение_суточной_нормы_клетчатки WHERE (([ID_набора" +
                "_параметров_пациента] = @Original_ID_набора_параметров_пациента) AND ((@IsNull_З" +
                "начение_суточной_нормы_белков = 1 AND [Значение_суточной_нормы_белков] IS NULL) " +
                "OR ([Значение_суточной_нормы_белков] = @Original_Значение_суточной_нормы_белков)" +
                ") AND ((@IsNull_Значение_суточной_нормы_жиров = 1 AND [Значение_суточной_нормы_ж" +
                "иров] IS NULL) OR ([Значение_суточной_нормы_жиров] = @Original_Значение_суточной" +
                "_нормы_жиров)) AND ((@IsNull_Значение_суточной_нормы_углеводов = 1 AND [Значение" +
                "_суточной_нормы_углеводов] IS NULL) OR ([Значение_суточной_нормы_углеводов] = @O" +
                "riginal_Значение_суточной_нормы_углеводов)) AND ((@IsNull_Значение_суточной_норм" +
                "ы_витамина_A = 1 AND [Значение_суточной_нормы_витамина_A] IS NULL) OR ([Значение" +
                "_суточной_нормы_витамина_A] = @Original_Значение_суточной_нормы_витамина_A)) AND" +
                " ((@IsNull_Значение_суточной_нормы_витамина_B1 = 1 AND [Значение_суточной_нормы_" +
                "витамина_B1] IS NULL) OR ([Значение_суточной_нормы_витамина_B1] = @Original_Знач" +
                "ение_суточной_нормы_витамина_B1)) AND ((@IsNull_Значение_суточной_нормы_витамина" +
                "_C = 1 AND [Значение_суточной_нормы_витамина_C] IS NULL) OR ([Значение_суточной_" +
                "нормы_витамина_C] = @Original_Значение_суточной_нормы_витамина_C)) AND ((@IsNull" +
                "_Значение_суточной_нормы_калорий = 1 AND [Значение_суточной_нормы_калорий] IS NU" +
                "LL) OR ([Значение_суточной_нормы_калорий] = @Original_Значение_суточной_нормы_ка" +
                "лорий)) AND ((@IsNull_Значение_суточной_нормы_клетчатки = 1 AND [Значение_суточн" +
                "ой_нормы_клетчатки] IS NULL) OR ([Значение_суточной_нормы_клетчатки] = @Original" +
                "_Значение_суточной_нормы_клетчатки)));\r\nSELECT ID_набора_параметров_пациента, Зн" +
                "ачение_суточной_нормы_белков, Значение_суточной_нормы_жиров, Значение_суточной_н" +
                "ормы_углеводов, Значение_суточной_нормы_витамина_A, Значение_суточной_нормы_вита" +
                "мина_B1, Значение_суточной_нормы_витамина_C, Значение_суточной_нормы_калорий, Зн" +
                "ачение_суточной_нормы_клетчатки FROM СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ WHERE (ID_набора_пар" +
                "аметров_пациента = @ID_набора_параметров_пациента)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_белков", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_белков", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_жиров", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_жиров", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_углеводов", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_углеводов", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_витамина_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 3, "Значение_суточной_нормы_витамина_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_витамина_B1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_витамина_B1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_витамина_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_витамина_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_калорий", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_калорий", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Значение_суточной_нормы_клетчатки", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_клетчатки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_набора_параметров_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_набора_параметров_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_белков", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_белков", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_белков", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_белков", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_жиров", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_жиров", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_жиров", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_жиров", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_углеводов", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_углеводов", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_углеводов", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_углеводов", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_витамина_A", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_витамина_A", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_витамина_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 3, "Значение_суточной_нормы_витамина_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_витамина_B1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_витамина_B1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_витамина_B1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_витамина_B1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_витамина_C", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_витамина_C", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_витамина_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_витамина_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_калорий", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_калорий", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_калорий", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_калорий", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Значение_суточной_нормы_клетчатки", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Значение_суточной_нормы_клетчатки", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Значение_суточной_нормы_клетчатки", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Значение_суточной_нормы_клетчатки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_набора_параметров_пациента", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_набора_параметров_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DESKTOP-0E3AC9U\\SQLEXPRESS;Initial Catalog=DietDB;Integrated Security" +
                "=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID_набора_параметров_пациента, Значение_суточной_нормы_белков, Значение_суточной_нормы_жиров, Значение_суточной_нормы_углеводов, Значение_суточной_нормы_витамина_A, Значение_суточной_нормы_витамина_B1, Значение_суточной_нормы_витамина_C, Значение_суточной_нормы_калорий, Значение_суточной_нормы_клетчатки FROM dbo.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DietDBDataSet.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DietDBDataSet.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DietDBDataSet.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable dataTable = new DietDBDataSet.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_набора_параметров_пациента, global::System.Nullable<decimal> Original_Значение_суточной_нормы_белков, global::System.Nullable<decimal> Original_Значение_суточной_нормы_жиров, global::System.Nullable<decimal> Original_Значение_суточной_нормы_углеводов, global::System.Nullable<decimal> Original_Значение_суточной_нормы_витамина_A, global::System.Nullable<decimal> Original_Значение_суточной_нормы_витамина_B1, global::System.Nullable<decimal> Original_Значение_суточной_нормы_витамина_C, global::System.Nullable<int> Original_Значение_суточной_нормы_калорий, global::System.Nullable<decimal> Original_Значение_суточной_нормы_клетчатки) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_набора_параметров_пациента));
            if ((Original_Значение_суточной_нормы_белков.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_Значение_суточной_нормы_белков.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Значение_суточной_нормы_жиров.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_Значение_суточной_нормы_жиров.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Значение_суточной_нормы_углеводов.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Значение_суточной_нормы_углеводов.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Значение_суточной_нормы_витамина_A.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_Значение_суточной_нормы_витамина_A.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Значение_суточной_нормы_витамина_B1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_Значение_суточной_нормы_витамина_B1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Значение_суточной_нормы_витамина_C.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_Значение_суточной_нормы_витамина_C.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Значение_суточной_нормы_калорий.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_Значение_суточной_нормы_калорий.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Значение_суточной_нормы_клетчатки.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_Значение_суточной_нормы_клетчатки.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> Значение_суточной_нормы_белков, global::System.Nullable<decimal> Значение_суточной_нормы_жиров, global::System.Nullable<decimal> Значение_суточной_нормы_углеводов, global::System.Nullable<decimal> Значение_суточной_нормы_витамина_A, global::System.Nullable<decimal> Значение_суточной_нормы_витамина_B1, global::System.Nullable<decimal> Значение_суточной_нормы_витамина_C, global::System.Nullable<int> Значение_суточной_нормы_калорий, global::System.Nullable<decimal> Значение_суточной_нормы_клетчатки) {
            if ((Значение_суточной_нормы_белков.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(Значение_суточной_нормы_белков.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Значение_суточной_нормы_жиров.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Значение_суточной_нормы_жиров.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Значение_суточной_нормы_углеводов.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Значение_суточной_нормы_углеводов.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Значение_суточной_нормы_витамина_A.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Значение_суточной_нормы_витамина_A.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Значение_суточной_нормы_витамина_B1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(Значение_суточной_нормы_витамина_B1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Значение_суточной_нормы_витамина_C.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Значение_суточной_нормы_витамина_C.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Значение_суточной_нормы_калорий.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Значение_суточной_нормы_калорий.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Значение_суточной_нормы_клетчатки.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(Значение_суточной_нормы_клетчатки.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> Значение_суточной_нормы_белков, 
                    global::System.Nullable<decimal> Значение_суточной_нормы_жиров, 
                    global::System.Nullable<decimal> Значение_суточной_нормы_углеводов, 
                    global::System.Nullable<decimal> Значение_суточной_нормы_витамина_A, 
                    global::System.Nullable<decimal> Значение_суточной_нормы_витамина_B1, 
                    global::System.Nullable<decimal> Значение_суточной_нормы_витамина_C, 
                    global::System.Nullable<int> Значение_суточной_нормы_калорий, 
                    global::System.Nullable<decimal> Значение_суточной_нормы_клетчатки, 
                    int Original_ID_набора_параметров_пациента, 
                    global::System.Nullable<decimal> Original_Значение_суточной_нормы_белков, 
                    global::System.Nullable<decimal> Original_Значение_суточной_нормы_жиров, 
                    global::System.Nullable<decimal> Original_Значение_суточной_нормы_углеводов, 
                    global::System.Nullable<decimal> Original_Значение_суточной_нормы_витамина_A, 
                    global::System.Nullable<decimal> Original_Значение_суточной_нормы_витамина_B1, 
                    global::System.Nullable<decimal> Original_Значение_суточной_нормы_витамина_C, 
                    global::System.Nullable<int> Original_Значение_суточной_нормы_калорий, 
                    global::System.Nullable<decimal> Original_Значение_суточной_нормы_клетчатки, 
                    int ID_набора_параметров_пациента) {
            if ((Значение_суточной_нормы_белков.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(Значение_суточной_нормы_белков.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Значение_суточной_нормы_жиров.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Значение_суточной_нормы_жиров.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Значение_суточной_нормы_углеводов.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Значение_суточной_нормы_углеводов.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Значение_суточной_нормы_витамина_A.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Значение_суточной_нормы_витамина_A.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Значение_суточной_нормы_витамина_B1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Значение_суточной_нормы_витамина_B1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Значение_суточной_нормы_витамина_C.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Значение_суточной_нормы_витамина_C.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Значение_суточной_нормы_калорий.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Значение_суточной_нормы_калорий.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Значение_суточной_нормы_клетчатки.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Значение_суточной_нормы_клетчатки.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_набора_параметров_пациента));
            if ((Original_Значение_суточной_нормы_белков.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_Значение_суточной_нормы_белков.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Значение_суточной_нормы_жиров.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_Значение_суточной_нормы_жиров.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Значение_суточной_нормы_углеводов.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_Значение_суточной_нормы_углеводов.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Значение_суточной_нормы_витамина_A.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_Значение_суточной_нормы_витамина_A.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Значение_суточной_нормы_витамина_B1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_Значение_суточной_нормы_витамина_B1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Значение_суточной_нормы_витамина_C.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_Значение_суточной_нормы_витамина_C.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Значение_суточной_нормы_калорий.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_Значение_суточной_нормы_калорий.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Значение_суточной_нормы_клетчатки.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_Значение_суточной_нормы_клетчатки.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(ID_набора_параметров_пациента));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> Значение_суточной_нормы_белков, 
                    global::System.Nullable<decimal> Значение_суточной_нормы_жиров, 
                    global::System.Nullable<decimal> Значение_суточной_нормы_углеводов, 
                    global::System.Nullable<decimal> Значение_суточной_нормы_витамина_A, 
                    global::System.Nullable<decimal> Значение_суточной_нормы_витамина_B1, 
                    global::System.Nullable<decimal> Значение_суточной_нормы_витамина_C, 
                    global::System.Nullable<int> Значение_суточной_нормы_калорий, 
                    global::System.Nullable<decimal> Значение_суточной_нормы_клетчатки, 
                    int Original_ID_набора_параметров_пациента, 
                    global::System.Nullable<decimal> Original_Значение_суточной_нормы_белков, 
                    global::System.Nullable<decimal> Original_Значение_суточной_нормы_жиров, 
                    global::System.Nullable<decimal> Original_Значение_суточной_нормы_углеводов, 
                    global::System.Nullable<decimal> Original_Значение_суточной_нормы_витамина_A, 
                    global::System.Nullable<decimal> Original_Значение_суточной_нормы_витамина_B1, 
                    global::System.Nullable<decimal> Original_Значение_суточной_нормы_витамина_C, 
                    global::System.Nullable<int> Original_Значение_суточной_нормы_калорий, 
                    global::System.Nullable<decimal> Original_Значение_суточной_нормы_клетчатки) {
            return this.Update(Значение_суточной_нормы_белков, Значение_суточной_нормы_жиров, Значение_суточной_нормы_углеводов, Значение_суточной_нормы_витамина_A, Значение_суточной_нормы_витамина_B1, Значение_суточной_нормы_витамина_C, Значение_суточной_нормы_калорий, Значение_суточной_нормы_клетчатки, Original_ID_набора_параметров_пациента, Original_Значение_суточной_нормы_белков, Original_Значение_суточной_нормы_жиров, Original_Значение_суточной_нормы_углеводов, Original_Значение_суточной_нормы_витамина_A, Original_Значение_суточной_нормы_витамина_B1, Original_Значение_суточной_нормы_витамина_C, Original_Значение_суточной_нормы_калорий, Original_Значение_суточной_нормы_клетчатки, Original_ID_набора_параметров_пациента);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ";
            tableMapping.ColumnMappings.Add("ID_категории_продуктов", "ID_категории_продуктов");
            tableMapping.ColumnMappings.Add("ID_совместимой_категории_продуктов", "ID_совместимой_категории_продуктов");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ] ([ID_категории_продуктов], " +
                "[ID_совместимой_категории_продуктов]) VALUES (@ID_категории_продуктов, @ID_совме" +
                "стимой_категории_продуктов)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_категории_продуктов", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_категории_продуктов", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_совместимой_категории_продуктов", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_совместимой_категории_продуктов", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DESKTOP-0E3AC9U\\SQLEXPRESS;Initial Catalog=DietDB;Integrated Security" +
                "=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_категории_продуктов, ID_совместимой_категории_продуктов FROM dbo.СОВМЕС" +
                "ТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DietDBDataSet.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DietDBDataSet.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DietDBDataSet.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable dataTable = new DietDBDataSet.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_категории_продуктов, global::System.Nullable<int> ID_совместимой_категории_продуктов) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_категории_продуктов));
            if ((ID_совместимой_категории_продуктов.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_совместимой_категории_продуктов.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class РАЦИОНTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public РАЦИОНTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "РАЦИОН";
            tableMapping.ColumnMappings.Add("ID_рациона", "ID_рациона");
            tableMapping.ColumnMappings.Add("ID_набора_параметров_пациента", "ID_набора_параметров_пациента");
            tableMapping.ColumnMappings.Add("Доступный_бюджет", "Доступный_бюджет");
            tableMapping.ColumnMappings.Add("ID_пациента", "ID_пациента");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[РАЦИОН] WHERE (([ID_рациона] = @Original_ID_рациона) AND ([ID_" +
                "набора_параметров_пациента] = @Original_ID_набора_параметров_пациента) AND ([Дос" +
                "тупный_бюджет] = @Original_Доступный_бюджет) AND ([ID_пациента] = @Original_ID_п" +
                "ациента))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_рациона", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_рациона", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_набора_параметров_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_набора_параметров_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Доступный_бюджет", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Доступный_бюджет", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[РАЦИОН] ([ID_набора_параметров_пациента], [Доступный_бюджет], [ID_пациента]) VALUES (@ID_набора_параметров_пациента, @Доступный_бюджет, @ID_пациента);
SELECT ID_рациона, ID_набора_параметров_пациента, Доступный_бюджет, ID_пациента FROM РАЦИОН WHERE (ID_рациона = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_набора_параметров_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_набора_параметров_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Доступный_бюджет", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Доступный_бюджет", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[РАЦИОН] SET [ID_набора_параметров_пациента] = @ID_набора_параметров_пациента, [Доступный_бюджет] = @Доступный_бюджет, [ID_пациента] = @ID_пациента WHERE (([ID_рациона] = @Original_ID_рациона) AND ([ID_набора_параметров_пациента] = @Original_ID_набора_параметров_пациента) AND ([Доступный_бюджет] = @Original_Доступный_бюджет) AND ([ID_пациента] = @Original_ID_пациента));
SELECT ID_рациона, ID_набора_параметров_пациента, Доступный_бюджет, ID_пациента FROM РАЦИОН WHERE (ID_рациона = @ID_рациона)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_набора_параметров_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_набора_параметров_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Доступный_бюджет", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Доступный_бюджет", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_рациона", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_рациона", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_набора_параметров_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_набора_параметров_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Доступный_бюджет", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Доступный_бюджет", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_рациона", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_рациона", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DESKTOP-0E3AC9U\\SQLEXPRESS;Initial Catalog=DietDB;Integrated Security" +
                "=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_рациона, ID_набора_параметров_пациента, Доступный_бюджет, ID_пациента F" +
                "ROM dbo.РАЦИОН";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DietDBDataSet.РАЦИОНDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DietDBDataSet.РАЦИОНDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DietDBDataSet.РАЦИОНDataTable dataTable = new DietDBDataSet.РАЦИОНDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet.РАЦИОНDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "РАЦИОН");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_рациона, int Original_ID_набора_параметров_пациента, int Original_Доступный_бюджет, int Original_ID_пациента) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_рациона));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_набора_параметров_пациента));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Доступный_бюджет));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_ID_пациента));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_набора_параметров_пациента, int Доступный_бюджет, int ID_пациента) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_набора_параметров_пациента));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Доступный_бюджет));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ID_пациента));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_набора_параметров_пациента, int Доступный_бюджет, int ID_пациента, int Original_ID_рациона, int Original_ID_набора_параметров_пациента, int Original_Доступный_бюджет, int Original_ID_пациента, int ID_рациона) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_набора_параметров_пациента));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Доступный_бюджет));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ID_пациента));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_рациона));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_набора_параметров_пациента));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Доступный_бюджет));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_пациента));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID_рациона));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_набора_параметров_пациента, int Доступный_бюджет, int ID_пациента, int Original_ID_рациона, int Original_ID_набора_параметров_пациента, int Original_Доступный_бюджет, int Original_ID_пациента) {
            return this.Update(ID_набора_параметров_пациента, Доступный_бюджет, ID_пациента, Original_ID_рациона, Original_ID_набора_параметров_пациента, Original_Доступный_бюджет, Original_ID_пациента, Original_ID_рациона);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ПРОДУКТTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ПРОДУКТTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ПРОДУКТ";
            tableMapping.ColumnMappings.Add("ID_продукта", "ID_продукта");
            tableMapping.ColumnMappings.Add("Название_продукта", "Название_продукта");
            tableMapping.ColumnMappings.Add("Содержание_белков_на_100_г_продукта", "Содержание_белков_на_100_г_продукта");
            tableMapping.ColumnMappings.Add("Содержание_жиров_на_100_г_продукта", "Содержание_жиров_на_100_г_продукта");
            tableMapping.ColumnMappings.Add("Содержание_углеводов_на_100_г_продукта", "Содержание_углеводов_на_100_г_продукта");
            tableMapping.ColumnMappings.Add("Содержание_витамина_A_на_100_г_продукта", "Содержание_витамина_A_на_100_г_продукта");
            tableMapping.ColumnMappings.Add("Содержание_витамина_B1_на_100_г_продукта", "Содержание_витамина_B1_на_100_г_продукта");
            tableMapping.ColumnMappings.Add("Содержание_витамина_C_на_100_г_продукта", "Содержание_витамина_C_на_100_г_продукта");
            tableMapping.ColumnMappings.Add("Калорийность_на_100_г_продукта", "Калорийность_на_100_г_продукта");
            tableMapping.ColumnMappings.Add("ID_категории_продуктов", "ID_категории_продуктов");
            tableMapping.ColumnMappings.Add("Стоимость_100_г_продукта", "Стоимость_100_г_продукта");
            tableMapping.ColumnMappings.Add("Содержание_клетчатки_на_100_г_продукта", "Содержание_клетчатки_на_100_г_продукта");
            tableMapping.ColumnMappings.Add("Запрет_при_гастрите", "Запрет_при_гастрите");
            tableMapping.ColumnMappings.Add("Запрет_при_диабете", "Запрет_при_диабете");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ПРОДУКТ] WHERE (([ID_продукта] = @Original_ID_продукта) AND ([Название_продукта] = @Original_Название_продукта) AND ([Содержание_белков_на_100_г_продукта] = @Original_Содержание_белков_на_100_г_продукта) AND ([Содержание_жиров_на_100_г_продукта] = @Original_Содержание_жиров_на_100_г_продукта) AND ([Содержание_углеводов_на_100_г_продукта] = @Original_Содержание_углеводов_на_100_г_продукта) AND ([Содержание_витамина_A_на_100_г_продукта] = @Original_Содержание_витамина_A_на_100_г_продукта) AND ([Содержание_витамина_B1_на_100_г_продукта] = @Original_Содержание_витамина_B1_на_100_г_продукта) AND ([Содержание_витамина_C_на_100_г_продукта] = @Original_Содержание_витамина_C_на_100_г_продукта) AND ([Калорийность_на_100_г_продукта] = @Original_Калорийность_на_100_г_продукта) AND ([ID_категории_продуктов] = @Original_ID_категории_продуктов) AND ([Стоимость_100_г_продукта] = @Original_Стоимость_100_г_продукта) AND ([Содержание_клетчатки_на_100_г_продукта] = @Original_Содержание_клетчатки_на_100_г_продукта) AND ([Запрет_при_гастрите] = @Original_Запрет_при_гастрите) AND ([Запрет_при_диабете] = @Original_Запрет_при_диабете))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_продукта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Название_продукта", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Содержание_белков_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_белков_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Содержание_жиров_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_жиров_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Содержание_углеводов_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_углеводов_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Содержание_витамина_A_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 3, "Содержание_витамина_A_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Содержание_витамина_B1_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_витамина_B1_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Содержание_витамина_C_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_витамина_C_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Калорийность_на_100_г_продукта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Калорийность_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_категории_продуктов", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_категории_продуктов", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Стоимость_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Стоимость_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Содержание_клетчатки_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_клетчатки_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Запрет_при_гастрите", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Запрет_при_гастрите", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Запрет_при_диабете", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Запрет_при_диабете", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ПРОДУКТ] ([Название_продукта], [Содержание_белков_на_100_г_продукта], [Содержание_жиров_на_100_г_продукта], [Содержание_углеводов_на_100_г_продукта], [Содержание_витамина_A_на_100_г_продукта], [Содержание_витамина_B1_на_100_г_продукта], [Содержание_витамина_C_на_100_г_продукта], [Калорийность_на_100_г_продукта], [ID_категории_продуктов], [Стоимость_100_г_продукта], [Содержание_клетчатки_на_100_г_продукта], [Запрет_при_гастрите], [Запрет_при_диабете]) VALUES (@Название_продукта, @Содержание_белков_на_100_г_продукта, @Содержание_жиров_на_100_г_продукта, @Содержание_углеводов_на_100_г_продукта, @Содержание_витамина_A_на_100_г_продукта, @Содержание_витамина_B1_на_100_г_продукта, @Содержание_витамина_C_на_100_г_продукта, @Калорийность_на_100_г_продукта, @ID_категории_продуктов, @Стоимость_100_г_продукта, @Содержание_клетчатки_на_100_г_продукта, @Запрет_при_гастрите, @Запрет_при_диабете);
SELECT ID_продукта, Название_продукта, Содержание_белков_на_100_г_продукта, Содержание_жиров_на_100_г_продукта, Содержание_углеводов_на_100_г_продукта, Содержание_витамина_A_на_100_г_продукта, Содержание_витамина_B1_на_100_г_продукта, Содержание_витамина_C_на_100_г_продукта, Калорийность_на_100_г_продукта, ID_категории_продуктов, Стоимость_100_г_продукта, Содержание_клетчатки_на_100_г_продукта, Запрет_при_гастрите, Запрет_при_диабете FROM ПРОДУКТ WHERE (ID_продукта = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Название_продукта", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Содержание_белков_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_белков_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Содержание_жиров_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_жиров_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Содержание_углеводов_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_углеводов_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Содержание_витамина_A_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 3, "Содержание_витамина_A_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Содержание_витамина_B1_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_витамина_B1_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Содержание_витамина_C_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_витамина_C_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Калорийность_на_100_г_продукта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Калорийность_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_категории_продуктов", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_категории_продуктов", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Стоимость_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Стоимость_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Содержание_клетчатки_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_клетчатки_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Запрет_при_гастрите", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Запрет_при_гастрите", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Запрет_при_диабете", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Запрет_при_диабете", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ПРОДУКТ] SET [Название_продукта] = @Название_продукта, [Содержание_" +
                "белков_на_100_г_продукта] = @Содержание_белков_на_100_г_продукта, [Содержание_жи" +
                "ров_на_100_г_продукта] = @Содержание_жиров_на_100_г_продукта, [Содержание_углево" +
                "дов_на_100_г_продукта] = @Содержание_углеводов_на_100_г_продукта, [Содержание_ви" +
                "тамина_A_на_100_г_продукта] = @Содержание_витамина_A_на_100_г_продукта, [Содержа" +
                "ние_витамина_B1_на_100_г_продукта] = @Содержание_витамина_B1_на_100_г_продукта, " +
                "[Содержание_витамина_C_на_100_г_продукта] = @Содержание_витамина_C_на_100_г_прод" +
                "укта, [Калорийность_на_100_г_продукта] = @Калорийность_на_100_г_продукта, [ID_ка" +
                "тегории_продуктов] = @ID_категории_продуктов, [Стоимость_100_г_продукта] = @Стои" +
                "мость_100_г_продукта, [Содержание_клетчатки_на_100_г_продукта] = @Содержание_кле" +
                "тчатки_на_100_г_продукта, [Запрет_при_гастрите] = @Запрет_при_гастрите, [Запрет_" +
                "при_диабете] = @Запрет_при_диабете WHERE (([ID_продукта] = @Original_ID_продукта" +
                ") AND ([Название_продукта] = @Original_Название_продукта) AND ([Содержание_белко" +
                "в_на_100_г_продукта] = @Original_Содержание_белков_на_100_г_продукта) AND ([Соде" +
                "ржание_жиров_на_100_г_продукта] = @Original_Содержание_жиров_на_100_г_продукта) " +
                "AND ([Содержание_углеводов_на_100_г_продукта] = @Original_Содержание_углеводов_н" +
                "а_100_г_продукта) AND ([Содержание_витамина_A_на_100_г_продукта] = @Original_Сод" +
                "ержание_витамина_A_на_100_г_продукта) AND ([Содержание_витамина_B1_на_100_г_прод" +
                "укта] = @Original_Содержание_витамина_B1_на_100_г_продукта) AND ([Содержание_вит" +
                "амина_C_на_100_г_продукта] = @Original_Содержание_витамина_C_на_100_г_продукта) " +
                "AND ([Калорийность_на_100_г_продукта] = @Original_Калорийность_на_100_г_продукта" +
                ") AND ([ID_категории_продуктов] = @Original_ID_категории_продуктов) AND ([Стоимо" +
                "сть_100_г_продукта] = @Original_Стоимость_100_г_продукта) AND ([Содержание_клетч" +
                "атки_на_100_г_продукта] = @Original_Содержание_клетчатки_на_100_г_продукта) AND " +
                "([Запрет_при_гастрите] = @Original_Запрет_при_гастрите) AND ([Запрет_при_диабете" +
                "] = @Original_Запрет_при_диабете));\r\nSELECT ID_продукта, Название_продукта, Соде" +
                "ржание_белков_на_100_г_продукта, Содержание_жиров_на_100_г_продукта, Содержание_" +
                "углеводов_на_100_г_продукта, Содержание_витамина_A_на_100_г_продукта, Содержание" +
                "_витамина_B1_на_100_г_продукта, Содержание_витамина_C_на_100_г_продукта, Калорий" +
                "ность_на_100_г_продукта, ID_категории_продуктов, Стоимость_100_г_продукта, Содер" +
                "жание_клетчатки_на_100_г_продукта, Запрет_при_гастрите, Запрет_при_диабете FROM " +
                "ПРОДУКТ WHERE (ID_продукта = @ID_продукта)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Название_продукта", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Содержание_белков_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_белков_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Содержание_жиров_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_жиров_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Содержание_углеводов_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_углеводов_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Содержание_витамина_A_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 3, "Содержание_витамина_A_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Содержание_витамина_B1_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_витамина_B1_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Содержание_витамина_C_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_витамина_C_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Калорийность_на_100_г_продукта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Калорийность_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_категории_продуктов", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_категории_продуктов", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Стоимость_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Стоимость_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Содержание_клетчатки_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_клетчатки_на_100_г_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Запрет_при_гастрите", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Запрет_при_гастрите", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Запрет_при_диабете", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Запрет_при_диабете", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_продукта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Название_продукта", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Название_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Содержание_белков_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_белков_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Содержание_жиров_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_жиров_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Содержание_углеводов_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_углеводов_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Содержание_витамина_A_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 7, 3, "Содержание_витамина_A_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Содержание_витамина_B1_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_витамина_B1_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Содержание_витамина_C_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_витамина_C_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Калорийность_на_100_г_продукта", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Калорийность_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_категории_продуктов", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_категории_продуктов", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Стоимость_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Стоимость_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Содержание_клетчатки_на_100_г_продукта", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Содержание_клетчатки_на_100_г_продукта", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Запрет_при_гастрите", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Запрет_при_гастрите", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Запрет_при_диабете", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Запрет_при_диабете", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_продукта", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_продукта", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DESKTOP-0E3AC9U\\SQLEXPRESS;Initial Catalog=DietDB;Integrated Security" +
                "=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID_продукта, Название_продукта, Содержание_белков_на_100_г_продукта, Содержание_жиров_на_100_г_продукта, Содержание_углеводов_на_100_г_продукта, Содержание_витамина_A_на_100_г_продукта, Содержание_витамина_B1_на_100_г_продукта, Содержание_витамина_C_на_100_г_продукта, Калорийность_на_100_г_продукта, ID_категории_продуктов, Стоимость_100_г_продукта, Содержание_клетчатки_на_100_г_продукта, Запрет_при_гастрите, Запрет_при_диабете FROM dbo.ПРОДУКТ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DietDBDataSet.ПРОДУКТDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DietDBDataSet.ПРОДУКТDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DietDBDataSet.ПРОДУКТDataTable dataTable = new DietDBDataSet.ПРОДУКТDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet.ПРОДУКТDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ПРОДУКТ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_продукта, string Original_Название_продукта, decimal Original_Содержание_белков_на_100_г_продукта, decimal Original_Содержание_жиров_на_100_г_продукта, decimal Original_Содержание_углеводов_на_100_г_продукта, decimal Original_Содержание_витамина_A_на_100_г_продукта, decimal Original_Содержание_витамина_B1_на_100_г_продукта, decimal Original_Содержание_витамина_C_на_100_г_продукта, int Original_Калорийность_на_100_г_продукта, int Original_ID_категории_продуктов, decimal Original_Стоимость_100_г_продукта, decimal Original_Содержание_клетчатки_на_100_г_продукта, byte Original_Запрет_при_гастрите, byte Original_Запрет_при_диабете) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_продукта));
            if ((Original_Название_продукта == null)) {
                throw new global::System.ArgumentNullException("Original_Название_продукта");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Название_продукта));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_Содержание_белков_на_100_г_продукта));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_Содержание_жиров_на_100_г_продукта));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_Содержание_углеводов_на_100_г_продукта));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_Содержание_витамина_A_на_100_г_продукта));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_Содержание_витамина_B1_на_100_г_продукта));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_Содержание_витамина_C_на_100_г_продукта));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Калорийность_на_100_г_продукта));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_ID_категории_продуктов));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_Стоимость_100_г_продукта));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_Содержание_клетчатки_на_100_г_продукта));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((byte)(Original_Запрет_при_гастрите));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((byte)(Original_Запрет_при_диабете));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Название_продукта, decimal Содержание_белков_на_100_г_продукта, decimal Содержание_жиров_на_100_г_продукта, decimal Содержание_углеводов_на_100_г_продукта, decimal Содержание_витамина_A_на_100_г_продукта, decimal Содержание_витамина_B1_на_100_г_продукта, decimal Содержание_витамина_C_на_100_г_продукта, int Калорийность_на_100_г_продукта, int ID_категории_продуктов, decimal Стоимость_100_г_продукта, decimal Содержание_клетчатки_на_100_г_продукта, byte Запрет_при_гастрите, byte Запрет_при_диабете) {
            if ((Название_продукта == null)) {
                throw new global::System.ArgumentNullException("Название_продукта");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Название_продукта));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(Содержание_белков_на_100_г_продукта));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Содержание_жиров_на_100_г_продукта));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(Содержание_углеводов_на_100_г_продукта));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(Содержание_витамина_A_на_100_г_продукта));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Содержание_витамина_B1_на_100_г_продукта));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(Содержание_витамина_C_на_100_г_продукта));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Калорийность_на_100_г_продукта));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(ID_категории_продуктов));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(Стоимость_100_г_продукта));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(Содержание_клетчатки_на_100_г_продукта));
            this.Adapter.InsertCommand.Parameters[11].Value = ((byte)(Запрет_при_гастрите));
            this.Adapter.InsertCommand.Parameters[12].Value = ((byte)(Запрет_при_диабете));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Название_продукта, 
                    decimal Содержание_белков_на_100_г_продукта, 
                    decimal Содержание_жиров_на_100_г_продукта, 
                    decimal Содержание_углеводов_на_100_г_продукта, 
                    decimal Содержание_витамина_A_на_100_г_продукта, 
                    decimal Содержание_витамина_B1_на_100_г_продукта, 
                    decimal Содержание_витамина_C_на_100_г_продукта, 
                    int Калорийность_на_100_г_продукта, 
                    int ID_категории_продуктов, 
                    decimal Стоимость_100_г_продукта, 
                    decimal Содержание_клетчатки_на_100_г_продукта, 
                    byte Запрет_при_гастрите, 
                    byte Запрет_при_диабете, 
                    int Original_ID_продукта, 
                    string Original_Название_продукта, 
                    decimal Original_Содержание_белков_на_100_г_продукта, 
                    decimal Original_Содержание_жиров_на_100_г_продукта, 
                    decimal Original_Содержание_углеводов_на_100_г_продукта, 
                    decimal Original_Содержание_витамина_A_на_100_г_продукта, 
                    decimal Original_Содержание_витамина_B1_на_100_г_продукта, 
                    decimal Original_Содержание_витамина_C_на_100_г_продукта, 
                    int Original_Калорийность_на_100_г_продукта, 
                    int Original_ID_категории_продуктов, 
                    decimal Original_Стоимость_100_г_продукта, 
                    decimal Original_Содержание_клетчатки_на_100_г_продукта, 
                    byte Original_Запрет_при_гастрите, 
                    byte Original_Запрет_при_диабете, 
                    int ID_продукта) {
            if ((Название_продукта == null)) {
                throw new global::System.ArgumentNullException("Название_продукта");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Название_продукта));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(Содержание_белков_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Содержание_жиров_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Содержание_углеводов_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Содержание_витамина_A_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Содержание_витамина_B1_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Содержание_витамина_C_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Калорийность_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(ID_категории_продуктов));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Стоимость_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Содержание_клетчатки_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((byte)(Запрет_при_гастрите));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((byte)(Запрет_при_диабете));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_ID_продукта));
            if ((Original_Название_продукта == null)) {
                throw new global::System.ArgumentNullException("Original_Название_продукта");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Название_продукта));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_Содержание_белков_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_Содержание_жиров_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_Содержание_углеводов_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_Содержание_витамина_A_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_Содержание_витамина_B1_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_Содержание_витамина_C_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_Калорийность_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_ID_категории_продуктов));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_Стоимость_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_Содержание_клетчатки_на_100_г_продукта));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((byte)(Original_Запрет_при_гастрите));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((byte)(Original_Запрет_при_диабете));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(ID_продукта));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Название_продукта, 
                    decimal Содержание_белков_на_100_г_продукта, 
                    decimal Содержание_жиров_на_100_г_продукта, 
                    decimal Содержание_углеводов_на_100_г_продукта, 
                    decimal Содержание_витамина_A_на_100_г_продукта, 
                    decimal Содержание_витамина_B1_на_100_г_продукта, 
                    decimal Содержание_витамина_C_на_100_г_продукта, 
                    int Калорийность_на_100_г_продукта, 
                    int ID_категории_продуктов, 
                    decimal Стоимость_100_г_продукта, 
                    decimal Содержание_клетчатки_на_100_г_продукта, 
                    byte Запрет_при_гастрите, 
                    byte Запрет_при_диабете, 
                    int Original_ID_продукта, 
                    string Original_Название_продукта, 
                    decimal Original_Содержание_белков_на_100_г_продукта, 
                    decimal Original_Содержание_жиров_на_100_г_продукта, 
                    decimal Original_Содержание_углеводов_на_100_г_продукта, 
                    decimal Original_Содержание_витамина_A_на_100_г_продукта, 
                    decimal Original_Содержание_витамина_B1_на_100_г_продукта, 
                    decimal Original_Содержание_витамина_C_на_100_г_продукта, 
                    int Original_Калорийность_на_100_г_продукта, 
                    int Original_ID_категории_продуктов, 
                    decimal Original_Стоимость_100_г_продукта, 
                    decimal Original_Содержание_клетчатки_на_100_г_продукта, 
                    byte Original_Запрет_при_гастрите, 
                    byte Original_Запрет_при_диабете) {
            return this.Update(Название_продукта, Содержание_белков_на_100_г_продукта, Содержание_жиров_на_100_г_продукта, Содержание_углеводов_на_100_г_продукта, Содержание_витамина_A_на_100_г_продукта, Содержание_витамина_B1_на_100_г_продукта, Содержание_витамина_C_на_100_г_продукта, Калорийность_на_100_г_продукта, ID_категории_продуктов, Стоимость_100_г_продукта, Содержание_клетчатки_на_100_г_продукта, Запрет_при_гастрите, Запрет_при_диабете, Original_ID_продукта, Original_Название_продукта, Original_Содержание_белков_на_100_г_продукта, Original_Содержание_жиров_на_100_г_продукта, Original_Содержание_углеводов_на_100_г_продукта, Original_Содержание_витамина_A_на_100_г_продукта, Original_Содержание_витамина_B1_на_100_г_продукта, Original_Содержание_витамина_C_на_100_г_продукта, Original_Калорийность_на_100_г_продукта, Original_ID_категории_продуктов, Original_Стоимость_100_г_продукта, Original_Содержание_клетчатки_на_100_г_продукта, Original_Запрет_при_гастрите, Original_Запрет_при_диабете, Original_ID_продукта);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ПАЦИЕНТTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ПАЦИЕНТTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ПАЦИЕНТ";
            tableMapping.ColumnMappings.Add("ID_набора_параметров_пациента", "ID_набора_параметров_пациента");
            tableMapping.ColumnMappings.Add("ID_пациента", "ID_пациента");
            tableMapping.ColumnMappings.Add("Фамилия_пациента", "Фамилия_пациента");
            tableMapping.ColumnMappings.Add("Имя_пациента", "Имя_пациента");
            tableMapping.ColumnMappings.Add("Отчество_пациента", "Отчество_пациента");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ПАЦИЕНТ] WHERE (([ID_набора_параметров_пациента] = @Original_ID_набора_параметров_пациента) AND ([ID_пациента] = @Original_ID_пациента) AND ([Фамилия_пациента] = @Original_Фамилия_пациента) AND ([Имя_пациента] = @Original_Имя_пациента) AND ((@IsNull_Отчество_пациента = 1 AND [Отчество_пациента] IS NULL) OR ([Отчество_пациента] = @Original_Отчество_пациента)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_набора_параметров_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_набора_параметров_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фамилия_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Имя_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Отчество_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_пациента", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отчество_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ПАЦИЕНТ] ([ID_набора_параметров_пациента], [Фамилия_пациента], [Имя_пациента], [Отчество_пациента]) VALUES (@ID_набора_параметров_пациента, @Фамилия_пациента, @Имя_пациента, @Отчество_пациента);
SELECT ID_набора_параметров_пациента, ID_пациента, Фамилия_пациента, Имя_пациента, Отчество_пациента FROM ПАЦИЕНТ WHERE (ID_пациента = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_набора_параметров_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_набора_параметров_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фамилия_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Имя_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отчество_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ПАЦИЕНТ] SET [ID_набора_параметров_пациента] = @ID_набора_параметров_пациента, [Фамилия_пациента] = @Фамилия_пациента, [Имя_пациента] = @Имя_пациента, [Отчество_пациента] = @Отчество_пациента WHERE (([ID_набора_параметров_пациента] = @Original_ID_набора_параметров_пациента) AND ([ID_пациента] = @Original_ID_пациента) AND ([Фамилия_пациента] = @Original_Фамилия_пациента) AND ([Имя_пациента] = @Original_Имя_пациента) AND ((@IsNull_Отчество_пациента = 1 AND [Отчество_пациента] IS NULL) OR ([Отчество_пациента] = @Original_Отчество_пациента)));
SELECT ID_набора_параметров_пациента, ID_пациента, Фамилия_пациента, Имя_пациента, Отчество_пациента FROM ПАЦИЕНТ WHERE (ID_пациента = @ID_пациента)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_набора_параметров_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_набора_параметров_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Фамилия_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Имя_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Отчество_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_набора_параметров_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_набора_параметров_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Фамилия_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Фамилия_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Имя_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Имя_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Отчество_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_пациента", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Отчество_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Отчество_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_пациента", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DESKTOP-0E3AC9U\\SQLEXPRESS;Initial Catalog=DietDB;Integrated Security" +
                "=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_набора_параметров_пациента, ID_пациента, Фамилия_пациента, Имя_пациента" +
                ", Отчество_пациента FROM dbo.ПАЦИЕНТ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DietDBDataSet.ПАЦИЕНТDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DietDBDataSet.ПАЦИЕНТDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DietDBDataSet.ПАЦИЕНТDataTable dataTable = new DietDBDataSet.ПАЦИЕНТDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet.ПАЦИЕНТDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ПАЦИЕНТ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_набора_параметров_пациента, int Original_ID_пациента, string Original_Фамилия_пациента, string Original_Имя_пациента, string Original_Отчество_пациента) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_набора_параметров_пациента));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_пациента));
            if ((Original_Фамилия_пациента == null)) {
                throw new global::System.ArgumentNullException("Original_Фамилия_пациента");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Фамилия_пациента));
            }
            if ((Original_Имя_пациента == null)) {
                throw new global::System.ArgumentNullException("Original_Имя_пациента");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Имя_пациента));
            }
            if ((Original_Отчество_пациента == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Отчество_пациента));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_набора_параметров_пациента, string Фамилия_пациента, string Имя_пациента, string Отчество_пациента) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_набора_параметров_пациента));
            if ((Фамилия_пациента == null)) {
                throw new global::System.ArgumentNullException("Фамилия_пациента");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Фамилия_пациента));
            }
            if ((Имя_пациента == null)) {
                throw new global::System.ArgumentNullException("Имя_пациента");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Имя_пациента));
            }
            if ((Отчество_пациента == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Отчество_пациента));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_набора_параметров_пациента, string Фамилия_пациента, string Имя_пациента, string Отчество_пациента, int Original_ID_набора_параметров_пациента, int Original_ID_пациента, string Original_Фамилия_пациента, string Original_Имя_пациента, string Original_Отчество_пациента, int ID_пациента) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_набора_параметров_пациента));
            if ((Фамилия_пациента == null)) {
                throw new global::System.ArgumentNullException("Фамилия_пациента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Фамилия_пациента));
            }
            if ((Имя_пациента == null)) {
                throw new global::System.ArgumentNullException("Имя_пациента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Имя_пациента));
            }
            if ((Отчество_пациента == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Отчество_пациента));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_набора_параметров_пациента));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_пациента));
            if ((Original_Фамилия_пациента == null)) {
                throw new global::System.ArgumentNullException("Original_Фамилия_пациента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Фамилия_пациента));
            }
            if ((Original_Имя_пациента == null)) {
                throw new global::System.ArgumentNullException("Original_Имя_пациента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Имя_пациента));
            }
            if ((Original_Отчество_пациента == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Отчество_пациента));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(ID_пациента));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_набора_параметров_пациента, string Фамилия_пациента, string Имя_пациента, string Отчество_пациента, int Original_ID_набора_параметров_пациента, int Original_ID_пациента, string Original_Фамилия_пациента, string Original_Имя_пациента, string Original_Отчество_пациента) {
            return this.Update(ID_набора_параметров_пациента, Фамилия_пациента, Имя_пациента, Отчество_пациента, Original_ID_набора_параметров_пациента, Original_ID_пациента, Original_Фамилия_пациента, Original_Имя_пациента, Original_Отчество_пациента, Original_ID_пациента);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DietReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DietReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DietReport";
            tableMapping.ColumnMappings.Add("ProductName", "ProductName");
            tableMapping.ColumnMappings.Add("ProductCount", "ProductCount");
            tableMapping.ColumnMappings.Add("PatientName", "PatientName");
            tableMapping.ColumnMappings.Add("PatientSurname", "PatientSurname");
            tableMapping.ColumnMappings.Add("PatientPatronym", "PatientPatronym");
            tableMapping.ColumnMappings.Add("PatientGender", "PatientGender");
            tableMapping.ColumnMappings.Add("PatientHeight", "PatientHeight");
            tableMapping.ColumnMappings.Add("PatientWeight", "PatientWeight");
            tableMapping.ColumnMappings.Add("PatientIllness", "PatientIllness");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DESKTOP-0E3AC9U\\SQLEXPRESS;Initial Catalog=DietDB;Integrated Security" +
                "=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ProductName, ProductCount, PatientName, PatientSurname, PatientPatronym, P" +
                "atientGender, PatientHeight, PatientWeight, PatientIllness FROM dbo.DietReport(@" +
                "param_id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@param_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DietDBDataSet.DietReportDataTable dataTable, int param_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(param_id));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DietDBDataSet.DietReportDataTable GetData(int param_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(param_id));
            DietDBDataSet.DietReportDataTable dataTable = new DietDBDataSet.DietReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА";
            tableMapping.ColumnMappings.Add("ID_набора_параметров_пациента", "ID_набора_параметров_пациента");
            tableMapping.ColumnMappings.Add("Рост_пациента", "Рост_пациента");
            tableMapping.ColumnMappings.Add("Вес_пациента", "Вес_пациента");
            tableMapping.ColumnMappings.Add("Пол_пациента", "Пол_пациента");
            tableMapping.ColumnMappings.Add("Заболевание_пациента", "Заболевание_пациента");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА] WHERE (([ID_набора_параметров_пациента] = @Original_ID_набора_параметров_пациента) AND ([Рост_пациента] = @Original_Рост_пациента) AND ([Вес_пациента] = @Original_Вес_пациента) AND ([Пол_пациента] = @Original_Пол_пациента) AND ((@IsNull_Заболевание_пациента = 1 AND [Заболевание_пациента] IS NULL) OR ([Заболевание_пациента] = @Original_Заболевание_пациента)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_набора_параметров_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_набора_параметров_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Рост_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Рост_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вес_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пол_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пол_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Заболевание_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заболевание_пациента", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Заболевание_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заболевание_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА] ([Рост_пациента], [Вес_пациента], [Пол_пациента], [Заболевание_пациента]) VALUES (@Рост_пациента, @Вес_пациента, @Пол_пациента, @Заболевание_пациента);
SELECT ID_набора_параметров_пациента, Рост_пациента, Вес_пациента, Пол_пациента, Заболевание_пациента FROM НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА WHERE (ID_набора_параметров_пациента = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Рост_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Рост_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вес_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пол_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пол_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Заболевание_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заболевание_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА] SET [Рост_пациента] = @Рост_пациента, [Вес_пациента] = @Вес_пациента, [Пол_пациента] = @Пол_пациента, [Заболевание_пациента] = @Заболевание_пациента WHERE (([ID_набора_параметров_пациента] = @Original_ID_набора_параметров_пациента) AND ([Рост_пациента] = @Original_Рост_пациента) AND ([Вес_пациента] = @Original_Вес_пациента) AND ([Пол_пациента] = @Original_Пол_пациента) AND ((@IsNull_Заболевание_пациента = 1 AND [Заболевание_пациента] IS NULL) OR ([Заболевание_пациента] = @Original_Заболевание_пациента)));
SELECT ID_набора_параметров_пациента, Рост_пациента, Вес_пациента, Пол_пациента, Заболевание_пациента FROM НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА WHERE (ID_набора_параметров_пациента = @ID_набора_параметров_пациента)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Рост_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Рост_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Вес_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Пол_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пол_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Заболевание_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заболевание_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_набора_параметров_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_набора_параметров_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Рост_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Рост_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Вес_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Вес_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Пол_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Пол_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Заболевание_пациента", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заболевание_пациента", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Заболевание_пациента", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заболевание_пациента", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_набора_параметров_пациента", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_набора_параметров_пациента", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DESKTOP-0E3AC9U\\SQLEXPRESS;Initial Catalog=DietDB;Integrated Security" +
                "=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_набора_параметров_пациента, Рост_пациента, Вес_пациента, Пол_пациента, " +
                "Заболевание_пациента FROM dbo.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DietDBDataSet.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DietDBDataSet.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DietDBDataSet.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable dataTable = new DietDBDataSet.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DietDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_набора_параметров_пациента, int Original_Рост_пациента, int Original_Вес_пациента, string Original_Пол_пациента, string Original_Заболевание_пациента) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_набора_параметров_пациента));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Рост_пациента));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Вес_пациента));
            if ((Original_Пол_пациента == null)) {
                throw new global::System.ArgumentNullException("Original_Пол_пациента");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Пол_пациента));
            }
            if ((Original_Заболевание_пациента == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Заболевание_пациента));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Рост_пациента, int Вес_пациента, string Пол_пациента, string Заболевание_пациента) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Рост_пациента));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Вес_пациента));
            if ((Пол_пациента == null)) {
                throw new global::System.ArgumentNullException("Пол_пациента");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Пол_пациента));
            }
            if ((Заболевание_пациента == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Заболевание_пациента));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Рост_пациента, int Вес_пациента, string Пол_пациента, string Заболевание_пациента, int Original_ID_набора_параметров_пациента, int Original_Рост_пациента, int Original_Вес_пациента, string Original_Пол_пациента, string Original_Заболевание_пациента, int ID_набора_параметров_пациента) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Рост_пациента));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Вес_пациента));
            if ((Пол_пациента == null)) {
                throw new global::System.ArgumentNullException("Пол_пациента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Пол_пациента));
            }
            if ((Заболевание_пациента == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Заболевание_пациента));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_набора_параметров_пациента));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Рост_пациента));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Вес_пациента));
            if ((Original_Пол_пациента == null)) {
                throw new global::System.ArgumentNullException("Original_Пол_пациента");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Пол_пациента));
            }
            if ((Original_Заболевание_пациента == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Заболевание_пациента));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(ID_набора_параметров_пациента));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Рост_пациента, int Вес_пациента, string Пол_пациента, string Заболевание_пациента, int Original_ID_набора_параметров_пациента, int Original_Рост_пациента, int Original_Вес_пациента, string Original_Пол_пациента, string Original_Заболевание_пациента) {
            return this.Update(Рост_пациента, Вес_пациента, Пол_пациента, Заболевание_пациента, Original_ID_набора_параметров_пациента, Original_Рост_пациента, Original_Вес_пациента, Original_Пол_пациента, Original_Заболевание_пациента, Original_ID_набора_параметров_пациента);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private КАТЕГОРИЯ_ПРОДУКТОВTableAdapter _кАТЕГОРИЯ_ПРОДУКТОВTableAdapter;
        
        private ЭЛЕМЕНТ_РАЦИОНАTableAdapter _эЛЕМЕНТ_РАЦИОНАTableAdapter;
        
        private СУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter _сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter;
        
        private СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter _сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter;
        
        private РАЦИОНTableAdapter _рАЦИОНTableAdapter;
        
        private ПРОДУКТTableAdapter _пРОДУКТTableAdapter;
        
        private ПАЦИЕНТTableAdapter _пАЦИЕНТTableAdapter;
        
        private НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter _нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public КАТЕГОРИЯ_ПРОДУКТОВTableAdapter КАТЕГОРИЯ_ПРОДУКТОВTableAdapter {
            get {
                return this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter;
            }
            set {
                this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ЭЛЕМЕНТ_РАЦИОНАTableAdapter ЭЛЕМЕНТ_РАЦИОНАTableAdapter {
            get {
                return this._эЛЕМЕНТ_РАЦИОНАTableAdapter;
            }
            set {
                this._эЛЕМЕНТ_РАЦИОНАTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public СУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter СУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter {
            get {
                return this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter;
            }
            set {
                this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter {
            get {
                return this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter;
            }
            set {
                this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public РАЦИОНTableAdapter РАЦИОНTableAdapter {
            get {
                return this._рАЦИОНTableAdapter;
            }
            set {
                this._рАЦИОНTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ПРОДУКТTableAdapter ПРОДУКТTableAdapter {
            get {
                return this._пРОДУКТTableAdapter;
            }
            set {
                this._пРОДУКТTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ПАЦИЕНТTableAdapter ПАЦИЕНТTableAdapter {
            get {
                return this._пАЦИЕНТTableAdapter;
            }
            set {
                this._пАЦИЕНТTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter {
            get {
                return this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter;
            }
            set {
                this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter != null) 
                            && (this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter.Connection != null))) {
                    return this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter.Connection;
                }
                if (((this._эЛЕМЕНТ_РАЦИОНАTableAdapter != null) 
                            && (this._эЛЕМЕНТ_РАЦИОНАTableAdapter.Connection != null))) {
                    return this._эЛЕМЕНТ_РАЦИОНАTableAdapter.Connection;
                }
                if (((this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter != null) 
                            && (this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter.Connection != null))) {
                    return this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter.Connection;
                }
                if (((this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter != null) 
                            && (this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter.Connection != null))) {
                    return this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter.Connection;
                }
                if (((this._рАЦИОНTableAdapter != null) 
                            && (this._рАЦИОНTableAdapter.Connection != null))) {
                    return this._рАЦИОНTableAdapter.Connection;
                }
                if (((this._пРОДУКТTableAdapter != null) 
                            && (this._пРОДУКТTableAdapter.Connection != null))) {
                    return this._пРОДУКТTableAdapter.Connection;
                }
                if (((this._пАЦИЕНТTableAdapter != null) 
                            && (this._пАЦИЕНТTableAdapter.Connection != null))) {
                    return this._пАЦИЕНТTableAdapter.Connection;
                }
                if (((this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter != null) 
                            && (this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter.Connection != null))) {
                    return this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._эЛЕМЕНТ_РАЦИОНАTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._рАЦИОНTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._пРОДУКТTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._пАЦИЕНТTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(DietDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.КАТЕГОРИЯ_ПРОДУКТОВ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._пАЦИЕНТTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ПАЦИЕНТ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._пАЦИЕНТTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._рАЦИОНTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.РАЦИОН.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._рАЦИОНTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._пРОДУКТTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ПРОДУКТ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._пРОДУКТTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._эЛЕМЕНТ_РАЦИОНАTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ЭЛЕМЕНТ_РАЦИОНА.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._эЛЕМЕНТ_РАЦИОНАTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(DietDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.КАТЕГОРИЯ_ПРОДУКТОВ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._пАЦИЕНТTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ПАЦИЕНТ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._пАЦИЕНТTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._рАЦИОНTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.РАЦИОН.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._рАЦИОНTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._пРОДУКТTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ПРОДУКТ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._пРОДУКТTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._эЛЕМЕНТ_РАЦИОНАTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ЭЛЕМЕНТ_РАЦИОНА.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._эЛЕМЕНТ_РАЦИОНАTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(DietDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.СОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.СУТОЧНАЯ_НОРМА_ВЕЩЕСТВ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._эЛЕМЕНТ_РАЦИОНАTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ЭЛЕМЕНТ_РАЦИОНА.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._эЛЕМЕНТ_РАЦИОНАTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._пРОДУКТTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ПРОДУКТ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._пРОДУКТTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._рАЦИОНTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.РАЦИОН.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._рАЦИОНTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._пАЦИЕНТTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ПАЦИЕНТ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._пАЦИЕНТTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.КАТЕГОРИЯ_ПРОДУКТОВ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.НАБОР_ПАРАМЕТРОВ_ПАЦИЕНТА.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(DietDBDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._эЛЕМЕНТ_РАЦИОНАTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._эЛЕМЕНТ_РАЦИОНАTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._рАЦИОНTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._рАЦИОНTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._пРОДУКТTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._пРОДУКТTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._пАЦИЕНТTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._пАЦИЕНТTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter != null)) {
                    revertConnections.Add(this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter, this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter.Connection);
                    this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter.Adapter);
                    }
                }
                if ((this._эЛЕМЕНТ_РАЦИОНАTableAdapter != null)) {
                    revertConnections.Add(this._эЛЕМЕНТ_РАЦИОНАTableAdapter, this._эЛЕМЕНТ_РАЦИОНАTableAdapter.Connection);
                    this._эЛЕМЕНТ_РАЦИОНАTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._эЛЕМЕНТ_РАЦИОНАTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._эЛЕМЕНТ_РАЦИОНАTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._эЛЕМЕНТ_РАЦИОНАTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._эЛЕМЕНТ_РАЦИОНАTableAdapter.Adapter);
                    }
                }
                if ((this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter != null)) {
                    revertConnections.Add(this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter, this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter.Connection);
                    this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter.Adapter);
                    }
                }
                if ((this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter != null)) {
                    revertConnections.Add(this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter, this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter.Connection);
                    this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter.Adapter);
                    }
                }
                if ((this._рАЦИОНTableAdapter != null)) {
                    revertConnections.Add(this._рАЦИОНTableAdapter, this._рАЦИОНTableAdapter.Connection);
                    this._рАЦИОНTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._рАЦИОНTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._рАЦИОНTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._рАЦИОНTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._рАЦИОНTableAdapter.Adapter);
                    }
                }
                if ((this._пРОДУКТTableAdapter != null)) {
                    revertConnections.Add(this._пРОДУКТTableAdapter, this._пРОДУКТTableAdapter.Connection);
                    this._пРОДУКТTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._пРОДУКТTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._пРОДУКТTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._пРОДУКТTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._пРОДУКТTableAdapter.Adapter);
                    }
                }
                if ((this._пАЦИЕНТTableAdapter != null)) {
                    revertConnections.Add(this._пАЦИЕНТTableAdapter, this._пАЦИЕНТTableAdapter.Connection);
                    this._пАЦИЕНТTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._пАЦИЕНТTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._пАЦИЕНТTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._пАЦИЕНТTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._пАЦИЕНТTableAdapter.Adapter);
                    }
                }
                if ((this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter != null)) {
                    revertConnections.Add(this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter, this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter.Connection);
                    this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter != null)) {
                    this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter]));
                    this._кАТЕГОРИЯ_ПРОДУКТОВTableAdapter.Transaction = null;
                }
                if ((this._эЛЕМЕНТ_РАЦИОНАTableAdapter != null)) {
                    this._эЛЕМЕНТ_РАЦИОНАTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._эЛЕМЕНТ_РАЦИОНАTableAdapter]));
                    this._эЛЕМЕНТ_РАЦИОНАTableAdapter.Transaction = null;
                }
                if ((this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter != null)) {
                    this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter]));
                    this._сУТОЧНАЯ_НОРМА_ВЕЩЕСТВTableAdapter.Transaction = null;
                }
                if ((this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter != null)) {
                    this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter]));
                    this._сОВМЕСТИМОСТЬ_КАТЕГОРИЙ_ПРОДУКТОВTableAdapter.Transaction = null;
                }
                if ((this._рАЦИОНTableAdapter != null)) {
                    this._рАЦИОНTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._рАЦИОНTableAdapter]));
                    this._рАЦИОНTableAdapter.Transaction = null;
                }
                if ((this._пРОДУКТTableAdapter != null)) {
                    this._пРОДУКТTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._пРОДУКТTableAdapter]));
                    this._пРОДУКТTableAdapter.Transaction = null;
                }
                if ((this._пАЦИЕНТTableAdapter != null)) {
                    this._пАЦИЕНТTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._пАЦИЕНТTableAdapter]));
                    this._пАЦИЕНТTableAdapter.Transaction = null;
                }
                if ((this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter != null)) {
                    this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter]));
                    this._нАБОР_ПАРАМЕТРОВ_ПАЦИЕНТАTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591